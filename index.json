[{"categories":null,"content":" Đọc mục lục. Đọc summary. ","date":"2021-07-03","objectID":"/note/how-to-read-a-book/:0:0","tags":["book"],"title":"How to read a book","uri":"/note/how-to-read-a-book/"},{"categories":null,"content":"Reference How to Read a Book | The Art of Manliness ","date":"2021-07-03","objectID":"/note/how-to-read-a-book/:1:0","tags":["book"],"title":"How to read a book","uri":"/note/how-to-read-a-book/"},{"categories":null,"content":" Bubble Sort Quick Sort Selection Sort Insertion Sort ","date":"2021-06-30","objectID":"/note/algorithms-and-data-structures/:0:0","tags":["programmings"],"title":"Algorithms and Data Structures","uri":"/note/algorithms-and-data-structures/"},{"categories":null,"content":"Reference Algorithms: Part I Algorithms Notes for Professionals ","date":"2021-06-30","objectID":"/note/algorithms-and-data-structures/:1:0","tags":["programmings"],"title":"Algorithms and Data Structures","uri":"/note/algorithms-and-data-structures/"},{"categories":null,"content":"What is TLS TLS dựa trên SSL, được phát triển để thay thế SSL. ","date":"2021-06-24","objectID":"/note/ssl-tls/:1:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Security Provided SSL/TLS cũng cấp data encryption, data integrity và authentication. Nghĩa là khi dùng TLS thì: Không ai có thể đọc message (Encrypt) Không ai có thể thay đổi message (Sign) ","date":"2021-06-24","objectID":"/note/ssl-tls/:2:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Symmetrical Keys and Public and Private Keys Symmetrical Keys dùng chung key để encrypt/decrypt message. Public and Private Keys là một cặp keys, dùng public key để encrypt và private key để decrypt. ","date":"2021-06-24","objectID":"/note/ssl-tls/:3:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Keys and SSL Certificates TLS dùng public và private keys. Digital certificate dùng để xác định xem public key đó là của ai. Một digital certificate cung cấp một liên kết giữa public key và một entity (business,domain name,..) mà đã được verified (signed) bởi một trusted third party (certificate authority) ","date":"2021-06-24","objectID":"/note/ssl-tls/:4:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Obtaining a Digital Certificate Điền vào form và gửi public keys đến Certificate authority (CA) (là nơi xác thực certificate). CA kiểm tra và gửi lại các key được bọc trong một certificate. Certificate này được signed bởi Issuing Certificate authority, và được đảm bảo. Giờ ai muốn public key thì mình sẽ gửi certificate, xong họ sẽ verify the signature. ","date":"2021-06-24","objectID":"/note/ssl-tls/:5:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Example Usage Browser connects tới server dùng HTTPS. Server trả về Certificate chứa public key. Browser verifies Certificate bằng cách checking signature của CA. Browser dùng public key này để agree a session key với server. Browser và Server encrypt data qua connection dùng session key. ","date":"2021-06-24","objectID":"/note/ssl-tls/:6:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Digital Certificate Types Domain Validated Certificates (DVC) là một X.509 digital certificate (standard format cho public key certificates) thường được dùng cho Transport Layer Security (TLS) trong đó danh tính của người đăng kí đã được xác thực bằng cách chứng minh một số quyền kiểm soát DNS domain. Quá trình xác thực thường là tự động nên type này rẻ nhất. Extended validation Certificates (EVC) được sử dụng cho website HTTPS. Để lấy một EV certificate phải yêu cầu sự xác thực của requesting entity’s identity bởi một certificate authority (CA) ","date":"2021-06-24","objectID":"/note/ssl-tls/:7:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Certificate Usage Restrictions- Wildcards and SANs Thông thường mỗi certificate chỉ hợp lệ với một single fully qualified domain name (FQDN). Ví dụ certificate được mua cho www.mydomain.com thì không thể được dùng cho mail.mydomain.com hoặc www.otherdomain.com. Nếu muốn secure cho subdomain thì có thể mua Wildcard certificate. Nếu muốn secure cho nhiều domains bằng một certificate thì có thể mua Subject Alternative Name (SAN). ","date":"2021-06-24","objectID":"/note/ssl-tls/:8:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Self Signed Certificates? Có thể tự tạo một SSL certificate, những khi sử dụng thì browser sẽ báo site is not trusted. ","date":"2021-06-24","objectID":"/note/ssl-tls/:9:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Certificate Encodings and Files Extensions Encodings: Binary files, ASCII (base64) files. Files Extensions: .DER, .PEM (Privacy Enhanced Electron Mail), .CRT, .CERT Dùng openssl tools để xem encoding type và chuyển đổi encoding. ","date":"2021-06-24","objectID":"/note/ssl-tls/:10:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Common Questions and Answers Q- What is a trusted store? A- Là một danh sách các CA certificates that mình trust. Tất cả web browsers đều có trusted store. Q- What is a certificate fingerprint? A- Nó là hash của certificate, dùng để xác thực certificate mà không cần cài đặt CA certificate. Thích hợp cho thiết bị nhỏ, không có nhiều memory để chứa CA files. Hoặc dùng để verify thủ công, không qua browser. Q- Nếu certificate bị trộm? A- Thì có thể thu hồi. Q- Keystore dùng để lưu private key và certificate. Cách đặt tên cert.pem (public key) key.pem (private key) ca.pem (CA’s public key) ","date":"2021-06-24","objectID":"/note/ssl-tls/:11:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Flow Web Server đăng kí với CA để lấy certificate. Browser request đến Server lần đầu tiên, thì sẽ nhận được Certificate. Browser verify certificate với CA. Browser lấy public key từ certificate để encrypt data gửi lên Server. Server dùng private key descrypt data. ","date":"2021-06-24","objectID":"/note/ssl-tls/:12:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"Reference SSL and SSL Certificates Explained For Beginners https://www.baeldung.com/x-509-authentication-in-spring-security ","date":"2021-06-24","objectID":"/note/ssl-tls/:13:0","tags":["tag"],"title":"SSL/TLS","uri":"/note/ssl-tls/"},{"categories":null,"content":"A class cannot be private or protected except nested class. Access modifier Scope private only in class same package protected same package and subclasses public everywhere ","date":"2021-06-23","objectID":"/note/20210609120421/:0:0","tags":["java"],"title":"Java Access Modifier","uri":"/note/20210609120421/"},{"categories":null,"content":" Identifier bắt buộc phải bắt đầu bằng chữ, $ hoặc _. Identifier có thể chứa số. Từ Java 9, không được phép đặt identifier là _. Không được đặt trùng với reserved word. long okidentifier; float $OK2Identifier; boolean _alsoOK1d3ntifi3r; char __SStillOkbutKnotsonice$; int 3DPointClass; // identifiers cannot begin with a number byte hollywood@vine; // @ is not a letter, digit, $ or _ String *$coffee; // * is not a letter, digit, $ or _ double public; // public is a reserved word short _; // a single underscore is not allowed ","date":"2021-06-22","objectID":"/note/java-identifiers/:0:0","tags":["java"],"title":"Identifiers","uri":"/note/java-identifiers/"},{"categories":null,"content":"Primitive types primitive là một single value trong memory, như là một số hoặc kí tự. Keyword Type Example boolean true or false true byte 8-bit integral value 123 short 16-bit integral value 123 int 32-bit integral value 123 long 64-bit integral value 123L float 32-bit floating-point value 123.45f double 64-bit floating-point value 123.456 char 16-bit Unicode value ‘a’ Hầu hết các máy tính đều lưu trữ floating-point dưới dạng scientific notation. Nghĩa là gồm 2 số a và b, của dạng a * 10^b. Khi một số xuất hiện trong chương trình thì đó có type là int. Octal (digits 0-7) là số bắt đầu từ 0, ví dụ: 012 Hexadecimal (digits 0–9 and letters A–F/a–f), bắt đầu từ 0x hoặc 0X, ví dụ: 0xAB (không phân biệt hoa thường) Binary (digits 0–1), bắt đầu từ 0b hoặc 0B, ví dụ: 0b10, 0B10 long max = 3123456789; // DOES NOT COMPILE long max = 3123456789L; // now Java knows it is a long Có thể dùng _ để ngăn cách số cho dễ đọc. Tuy nhiên không được nằm đầu, cuối, cạnh bên decimal point. int million1 = 1000000; int million2 = 1_000_000; double notAtStart = _1000.00; // DOES NOT COMPILE double notAtEnd = 1000.00_; // DOES NOT COMPILE double notByDecimal = 1000_.00; // DOES NOT COMPILE double annoyingButLegal = 1_00_0.0_0; // Ugly, but compiles double reallyUgly = 1__________2; // Also compiles Reference có thể assign null, primitive không thể assign null. int value = null; // DOES NOT COMPILE String s = null; ","date":"2021-06-22","objectID":"/note/java-datatype/:0:1","tags":["java"],"title":"Java Data type","uri":"/note/java-datatype/"},{"categories":null,"content":"Package là logical grouping của class. Mỗi class đều thuộc về một package. import dùng để bảo compiler là nơi sẽ tìm class. Nó không import children package hoặc field hoặc method, chỉ import class import java.nio.*.*; // NO GOOD - you can only have one wildcard // and it must be at the end  import java.nio.file.Paths.*; // NO GOOD - you cannot import methods // only class names ","date":"2021-06-22","objectID":"/note/java-package/:0:0","tags":["java"],"title":"Java package","uri":"/note/java-package/"},{"categories":null,"content":" Java SOLID Maven Gradle Basic-SQL API Git HTTP/HTTPS Data structure and Algorithms Spring Hibernate PostgreSQL Redis ElasticSearch MongoDB Redis Caffeine jEdis ELK logback atmosphere REST GraphQL okhttp Mockito JUnit cucumber-jvm rest-assured RabbitMQ Apache Kafka gRPC Protocol Buffers micronaut thrift Java Patterns ","date":"2021-06-21","objectID":"/note/java-roadmap/:0:0","tags":["tag"],"title":"Java roadmap","uri":"/note/java-roadmap/"},{"categories":null,"content":"Reference https://github.com/s4kibs4mi/java-developer-roadmap ","date":"2021-06-21","objectID":"/note/java-roadmap/:1:0","tags":["tag"],"title":"Java roadmap","uri":"/note/java-roadmap/"},{"categories":null,"content":" Go POSIX Basic Jenkins Linux Text Manipulation Tools: awk, sed, grep (ripgrep), sort, uniq, cat, cut, echo, fmt, tr, nl, egrep, fgrep, wc Process Monitoring: ps, top, htop, atop, gotop, isof Bash Compiling apps from source: gcc, make System Performance: nmon, isotat, sar, vmstat Network: nmap, tcpdump, ping, mtr, traceroute, dig, airmon, airodump, dig, iptables, netstat strace, dtrace, systemtop, uname, df, history HTTP/HTTPS FTP SSL-TLS SSH Reverse Proxy Forward Proxy Caching Server Load Balancer Firewall Emails Nginx Istio Consul Docker Ansible Kubernetes Terraform Gitlab CI GitHub Actions Circle CI AWS Digital Ocean Prometheus Grafana New Relic Jaeger ","date":"2021-06-17","objectID":"/note/devops-roadmap/:0:0","tags":["project"],"title":"DevOps","uri":"/note/devops-roadmap/"},{"categories":null,"content":"Reference https://roadmap.sh/devops ","date":"2021-06-17","objectID":"/note/devops-roadmap/:1:0","tags":["project"],"title":"DevOps","uri":"/note/devops-roadmap/"},{"categories":null,"content":" Bàn chải điện. Máy giặt. ","date":"2021-06-14","objectID":"/note/20210614083018/:0:0","tags":["life"],"title":"Những món đồ giúp cải thiện cuộc sống","uri":"/note/20210614083018/"},{"categories":null,"content":" fruit chaos queue recipe comfortable vegetable chocolate wednesday ","date":"2021-06-13","objectID":"/note/20210613112204/:0:0","tags":["english"],"title":"English words that you pronounce INCORRECTLY","uri":"/note/20210613112204/"},{"categories":null,"content":" Java class thường có 2 thành phần chính: method và field (variable). Java không yêu cầu class phải là public. Có thể bỏ nhiều class vào chung một file. Nhưng chỉ có tối đa một class là có public và class đó phải trùng với tên file. // Student.java public class Student { private String name; public String getName() { return this.name; } } class Phone {} class Address {} ","date":"2021-06-09","objectID":"/note/20210609104822/:0:0","tags":["java"],"title":"Classes vs files","uri":"/note/20210609104822/"},{"categories":null,"content":" Java classes have two primary elements: methods, often called functions or procedures in other languages, and fields, more generally known as variables. Together these are called the members of the class. Variables hold the state of the program, and methods operate on that state. If the change is important to remember, a variable stores that change. That’s all classes really do. The void keyword means that no value at all is returned. Method requires information be supplied to it from the calling method; this information is called a parameter The method name and parameter types are called the method signature Example: public class Student { // The class keyword indicates you’re defining a class. Student gives the name of the class String name; // a variable named name with type is String public String getName() { return name; } public void setName(String name) { this.name = name; } } ","date":"2021-06-09","objectID":"/note/20210609101540/:0:0","tags":["Tag"],"title":"Field and method","uri":"/note/20210609101540/"},{"categories":null,"content":" public class HelloWorld { public static void main(String[] args) { System.out.println(\"This will be printed\"); } } public class HelloWorld { public được gọi là access modifier class được dùng để tạo một class. HelloWorld là tên của class. public static void main(String[] args) { static nghĩa là có thể chạy method này mà không cần một instance. void được gọi là một return type. main là tên của method. String[] args là parameter. main method được gọi là entry-point, điểm bắt đầu của một chương trình. parameter của nó có thể là: String[] options String options [] String... options Kể từ Java 11 thì có thể chạy chương trình mà không cần compile (javac) ... ở parameter được gọi là varargs ","date":"2021-06-09","objectID":"/note/20210609111803/:0:0","tags":["java"],"title":"Java Hello world","uri":"/note/20210609111803/"},{"categories":null,"content":" public class HelloWorld { public static void main(String[] args) { System.out.println(\"This will be printed\"); } } public class Main { The keyword public is what’s called an access modifier The keyword class is used to create a class, every line of code that can actually run needs to be inside a class. HelloWorld is a name of class. public static void main(String[] args) { static means that you can run this method without creating an instance of Main. void is what’s called an return type. main is the name of the method. String[] args is a parameter. ","date":"2021-06-09","objectID":"/note/20210609111803_en/:0:0","tags":["java"],"title":"Java Hello world","uri":"/note/20210609111803_en/"},{"categories":null,"content":" bfg --delete-files YOUR-FILE-WITH-SENSITIVE-DATA git push --force ","date":"2021-06-09","objectID":"/note/20210609182144/:0:0","tags":["git"],"title":"Remove file from Git history","uri":"/note/20210609182144/"},{"categories":null,"content":"Reference Removing files from a repository’s history - GitHub Docs Removing sensitive data from a repository - GitHub Docs ","date":"2021-06-09","objectID":"/note/20210609182144/:1:0","tags":["git"],"title":"Remove file from Git history","uri":"/note/20210609182144/"},{"categories":null,"content":"Chapter ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:0","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§1: THỬ TÌM MỘT ĐỊNH NGHĨA A. THẾ NÀO LÀ NGƯỜI HỌC THỨC? Học là để biết. Biết, mà không thực hành được, cũng chưa gọi là “biết”. Tri và hành cần phải hợp nhất mới được gọi là người “có học thức”. Học nhiều và học thức không giống nhau. Phần đông chúng ta thường nhận lầm việc ấy. Chúng ta thường đánh giá con người theo bằng cấp của họ, những bằng cấp ấy phần nhiều là những bằng cấp trí nhớ: kẻ nào nhớ giỏi thì thi đậu. Người học thức không phải cần biết thật nhiều, mà cần phải thật biết những gì mình đã biết. B. HỌC ĐỂ LÀM GÌ? Có hai hạng người: học vì tư lợi, và học không vì tư lợi gì cả, nghĩa là học để mà học, học theo sở thích của mình. Học, là để mưu hạnh phúc, nghĩa là để làm cho mình càng ngày càng mới, càng ngày càng cao, càng ngày càng rộng… Học, là tăng gia sự hiểu biết của mình, là mở rộng tâm hồn của mình bằng cách thu nhận sự hiểu biết cùng những kinh nghiệm của kẻ khác làm của mình. Học mà đến mực dường như quên hết cả sách vở của mình đã học thì cái học ấy mới thật là “nhập diệu”. Herriot nói: “Học thức là cái gì còn lại khi mình đã quên tất cả”. Quên là điều kiện cần thiết của cái nhớ. Một điều gì học mà mình còn cố nhớ, là nó chưa được nhập vào tâm. Chỉ khi nào mình không cần nhớ mà nó vẫn tự nhiên hiển hiện trong tâm trí mình thì môn học ấy mới được gọi là đã được tiêu hóa. C. THẾ NÀO LÀ BẬC THIÊN TÀI? Thiên tài là một sự nhẫn nại bền bỉ và lâu dài. Muốn thành những bậc tài hoa, điều thứ nhất là phải có lý tưởng, có đủ tin tưởng và chí kiên nhẫn để thực hiện lý tưởng ấy; điều thứ hai là làm việc cho có trật tự, có phương pháp, nhẫn nại và lặng lẽ, không bồn chồn, không vội vã… ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:1","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§2: NHỮNG YẾU TỐ CHÍNH A. HỌC VẤN VÀ THỜI GIAN B. CÁI HỌC VỀ BỀ RỘNG VÀ CÁI HỌC VỀ BỀ SÂU C. CỐ GẮNG: ĐIỀU KIỆN ĐẦU TIÊN CỦA SỰ TIẾN BỘ TINH THẦN Nếu đọc sách chỉ để giết thời giờ, tìm vui thích hoặc để tìm quên lãng trong những lúc buồn chán ở trên toa xe hay đọc sách để tìm giấc ngủ thì đọc sách không lợi gì cho tinh thần cả. Đọc sách mà có lợi cho tinh thần là khi nào mình biết vận dụng tất cả năng lực và năng khiếu của mình, nhận thức được rõ ràng những ý kiến sâu thẳm của lòng mình đem ra so sánh với những ý kiến dị đồng của tác giả, biết sắp đặt lại những ký ức của mình, biết trầm ngâm suy nghĩ, biết làm việc có phương pháp, tóm lại, biết thảo luận và thông cảm với tác giả quyển sách mình đọc, đó là biết cách đọc sách đấy. D. CỐ GẮNG MÀ ĐƯỢC BỀN BỈ LÀ NHỜ CÓ SỰ HỨNG THÚ LÀM HẬU THUẪN E. BIẾT TỔ CHỨC SỰ HIỂU BIẾT CỦA MÌNH Người có một trình độ văn hóa cao là người có một đầu óc rộng rãi, một tâm hồn khoáng đạt, không bao giờ chịu giam mình trong một học thuyết hay một chủ nghĩa nào. Họ biết rằng trong đời còn biết bao là điều hay chuyện lạ khác ngoài cái triết học mà họ tôn sùng. Vòng chân trời to rộng của sự hiểu biết của họ cứu họ thoát khỏi cái nhìn thiển cận và nô lệ của tâm hồn. Kẻ có trình độ văn hóa cao rộng là người có rất nhiều bậc thầy nhưng không nô lệ một ông thầy nào cả. Tóm lại, nhờ họ có rất nhiều “thầy” nên họ không lệ thuộc một ai cả. Họ nhờ đó mà biết quan sát một cách không thiên kiến, biết nhìn lại các vấn đề quan trọng bằng những nhãn quan khác nhau, biết kiểm lại tư tưởng và những thành kiến của mình với cặp mắt luôn luôn mới mẻ. Họ không bao giờ có những định kiến không thay đổi, nghĩa là họ có óc “hoài nghi triết lý” (doute philosophique), thỉnh thoảng biết đặt lại những vấn đề mà họ thiết tha tin tưởng nhất. F. ÓC PHÊ BÌNH G. “BIẾT MÌNH” H. HỌC ĐỂ THÀNH CÔNG TRONG CON ĐƯỜNG XỬ THẾ I. ÓC TINH NHUỆ J. BIẾT TUYỂN CHỌN LÀ CÁI HỌC ĐẦU TIÊN CỦA NGƯỜI TRÍ THỨC Tuyển chọn phải là công việc đầu tiên của người ham học. Chẳng những phải biết chọn riêng cho mình những sách mà mình thích nhất, lại cũng phải biết tuyển chọn trong một quyển sách những chương nào hay nhất để ta thỉnh thoảng đọc đi đọc lại. Tuyển chọn cũng có nghĩa là tuyển lại một trang, một đoạn hoặc một câu nào hay nhất có thể là tinh hoa của cả một chương, hay của một tiết để xem đi xem lại, hoặc để học thuộc lòng hay ghi nhớ trong tâm khảm. Phải có những tập trích tuyển các câu văn hay, những câu thơ đẹp hoặc những đoạn sách đặc sắc với những tư tưởng tân kỳ cho riêng mình. Nhưng cũng phải có một cuốn tập riêng để tóm tắt, và phê bình những sách hay mà mình đã đọc. Ở đây mỗi người đều có một phương pháp riêng không thể bắt ai phải theo ai được. Có hai cách tuyển chọn: Cách thứ nhất là lượm lặt tinh hoa của tất cả sách vở bất cứ thuộc về loại gì, bất cứ thuộc về thời nào. Cách thứ nhì là chọn trước một đầu đề rồi sau lấy đó làm trung tâm nghiên cứu, tuyển chọn những gì liên quan mật thiết với nó và mỗi ngày mỗi đi sâu vào vấn đề, được chừng nào hay chừng nấy. “Đừng bao giờ đọc những bài văn bây giờ, nhất là vừa mới viết do những ngòi bút mới lạ. Đừng đọc sách mới xuất bản. Phải để cho thời gian đào thải. Ngày giờ ta rất ngắn ngủi: đừng nên đọc những sách chưa chịu nổi thử thách của thời gian. Đừng đọc sách của những nhà văn chưa có tên tuổi. Chỉ nên đọc những sách gì đã được tái bản hay xuất bản được trên ba năm là ít nhất. Rồi hãy lựa những sách nào đã xuất bản được trên ba mươi năm, trên ba trăm năm, trên ba ngàn năm… bấy giờ bạn sẽ lại gặp văn hào Homère” ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:2","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§3: NHỮNG ĐIỀU KIỆN THUẬN TIỆN CHO SỰ TỰ HỌC A. THỜI GIỜ Dù là bậc thông minh đến đâu cũng không thể chấp thời gian mà thành công trên con đường học hỏi Thiếu thời gian, cái học của con người chỉ được có bề rộng, kém bề sâu, hay cũng chỉ có được một nước sơn bóng loáng bên ngoài mà thôi. Chấp thời gian là phản văn hóa. B. TINH THẦN TẢN MÁT Muốn có được một học vấn uyên thâm, cần phải tránh những cơ hội làm cho tinh thần tản mát trong một đời sống quá phiền phức. Phải biết bênh vực thời giờ quý báu của ta. Biết từ chối, đó là một sức mạnh của tâm hồn. Đừng sợ làm phật lòng kẻ khác bằng sự từ chối khéo léo: mình đã chẳng những làm lợi cho mình mà cũng không làm bận cho người. C. ĐỜI SỐNG ĐƠN GIẢN Điều kiện thuận tiện nhất cho một người cố tâm học hỏi là phải có được một đời sống đơn giản nhất. Sống đơn giản, đâu có nghĩa là sống nghèo khó trong cảnh muối dưa đạm bạc, sống thiếu tất cả tiện nghi và trở lại sống cái sống con người bán khai mộc mạc. Sự bận lòng vì quá thiếu thốn về vật chất không những sẽ làm cho đời ta bực bội, lại còn làm cho nó thêm phiền phức hơn nữa, chứ không giản dị hóa nó được như ta đã tưởng. Trái lại, có một sự nghiệp to lớn, tiền của nhiều cũng làm bận thêm tâm trí: lo làm thêm ra mãi, lo thu cất giữ gìn, lo tranh đấu với những kẻ tranh thương với mình là cả một công việc vô cùng phiền phức. Chỉ có những đời sống mà gia tư kha khá về mực trung mới có thể có đủ điều kiện thuận tiện nhất cho công trình tự học. Quan trọng chăng là cái quan niệm của mình đối với tiền bạc. Đời sống đơn giản tức là cái nếp sống tổ chức theo một quan niệm biết nhìn thấy cái gì là chính, cái gì là phụ trong đời, biết quý cái cần thiết mà bỏ qua những cái không cần thiết Sự gần gũi thân mật với những loại sách quá tầm thường sẽ càng ngày càng làm hạ thấp tinh thần trí não của ta. Gần mực đen, gần đèn sáng. D. SỰ TẬP TRUNG TINH THẦN Muốn có được một đầu óc luôn luôn sáng suốt, phải biết tập cho mình cái thói quen tìm ngay ý chính, biết phân biệt liền cái gì là yếu điểm với những gì là phụ thuộc, nhất định không bao giờ để mình bị lôi cuốn theo những đề phụ… mỗi khi đọc sách, xem tranh, làm văn, xem kịch hay nghe diễn thuyết. Bất cứ làm việc gì, chuyên tâm chú ý, tập trung tinh thần là bí quyết của thành công. E. ÓC TỔNG QUAN F. ÓC NHÂN QUẢ Sự vật trong đời không bao giờ ngẫu nhiên mà có, cũng không bao giờ ngẫu nhiên mà không. Trước một hiện tượng nào, hãy hỏi: Tại sao? Và nếu có ai quả quyết với mình một điều gì, phải lập tức đòi hỏi lấy “bằng cứ”. Đọc báo, thấy nhà phê bình chê hoặc khen một tác phẩm nào, phải tự hỏi để tìm lấy cái nguyên nhân thầm kín của nó: “Tại sao khen? Tại sao chê?”. Ta phải đòi hỏi nơi nhà phê bình những bằng cứ đúng đắn trước khi nhận những lời phê phán của họ. G. ÓC TẾ NHỊ H. ÓC THÁN THƯỞNG Phần đông, ta thường có cái khuynh hướng hay tưởng tượng rằng mình đã hiểu rõ rồi, nhưng khi bị bắt buộc phải giảng giải ra thì mình mới nhận thấy mình mới chỉ nhận thức một cách rất lờ mờ. “Không có sự dốt nát nào nhục nhã bằng tin tưởng rằng mình đã hiểu những gì mình không hiểu” Cũng nên cố gắng mà trả lời một cách thành thật và đúng đắn những câu hỏi đột ngột của trẻ thơ. Con trẻ thường giữ được sự thán thưởng tự nhiên: đối với chúng, tất thảy đều là những hiện trạng bất thường, chúng thường có những câu hỏi bất ngờ nhưng đầy ý vị sâu xa, mà phần đông người lớn không sao trả lời cho xuôi được. Nhưng đó thường lại là những câu hỏi đầy ý nghĩa của triết học nếu ta biết để ý đến. Đừng bỏ qua mà la rầy đàn áp chúng, như chúng ta thường có thói quen khinh thường chúng. ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:3","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§4: NHỮNG PHƯƠNG TIỆN CHÍNH YẾU A. ĐỌC SÁCH 1. Thế nào là sách hay? Cần phải loại trừ những loại sách dài lê thê bất tận, những sách buồn chán, những sách đọc “khó tiêu”. Tuy nhiên, một quyển sách ngắn, vui vẻ và dễ dàng cũng rất dễ biến thành những thứ sách đơn sơ quá, thiếu căn bản, thiếu cương yếu và là những thứ sách rỗng tuếch, rất tầm thường. “Chúng ta nên tin cậy nơi sự lựa chọn của các thế kỷ đã qua. Một người có thể lầm, một thế hệ có thể lầm nhưng cả nhân loại không thể lầm. Homère, Shakespeare, Molière chắc chắn là những người xứng đáng với danh tiếng của họ. Chúng ta sẽ chuộng các tác giả này hơn là các nhà chưa chịu sự thử thách của thời gian”. “Đọc sách là một cách lười biếng nguy hiểm nhất, bởi kẻ làm biếng mà ở không, họ sẽ cảm thấy như khó chịu với lương tâm. Trái lại, nếu họ có đọc sách, họ tin rằng họ có làm việc và nhân thế, cái bệnh lười biếng của họ không còn thế nào trị đặng nữa”. Sự đọc sách để tìm an ủi trong đau khổ, đọc sách để tìm một sức mạnh tinh thần, giúp tâm hồn mình thêm nhẫn nại, can đảm mà vượt qua những thống khổ của cuộc đời, đọc sách để tìm hứng thú cho tinh thần cũng đều thuộc về loại đọc sách để tự học cả, vì phàm cái chi hoạt khởi được tâm cảm mình, đổi mới được về khuynh hướng “chân”, “thiện”, “mỹ” đều bổ ích cho tinh thần trí não của mình. 2. Đọc sách để tìm hiểu mình B. PHẢI ĐỌC SÁCH CÁCH NÀO? 1. Tính cách tôn nghiêm của sự đọc sách Nên tránh cái cảnh vừa đọc, vừa ăn, vừa nói chuyện, hoặc đọc thoáng qua một trang, thì ngừng lại để trả lời máy điện thoại, hoặc cầm sách mà trí nghĩ đâu đâu rồi lại bỏ dở vì có người bạn đến nói chuyện khào, rủ nhau đi ăn uống hay đi dạo mát. Người biết đọc sách phải biết dành cho mình một buổi nào để đọc sách trong yên lặng và cô tịch. 2. Chỉ đọc những tác phẩm hay “Nếu cho tôi được sống lại cuộc đời của tôi, tôi tự thệ trong lúc trẻ tuổi, chỉ đọc ròng sách hay, do những bậc vĩ nhân trong tư tưởng giới viết ra thôi. Tôi đã mua rất đắt cái kinh nghiệm đã qua của tôi khi còn nhỏ đã làm phung phí sức lực của tôi rất vô lối vì những tác phẩm vô giá trị. Nếu anh em muốn có một tương lai tốt đẹp về tinh thần, hãy nghe theo tôi, đừng bao giờ đọc sách nhảm…” - Jules Payot - La Faillite de l’Enseignement (F. Alcan, 1930). 3. Sách “gối đầu giường” Những sách “gối đầu giường” phải là những bộ sách mà bất cứ ở hoàn cảnh nào đều có thể giúp cho ta một vài ý tưởng thích nghi và an ủi; những sách đưa ta lên cao bằng những tư tưởng thanh thoát hay những tấm gương của những bậc anh hùng vĩ nhân của nhân loại; những sách giúp cho ta biết hoài nghi suy nghĩ thêm, biết đặt vấn đề, biết làm cho lòng ta nhẹ nhàng và phấn khởi, khôn ngoan và trong sạch hơn. 4. Uống nước tận nguồn Đọc sách hay cần đọc ngay nguyên văn. Nếu không đọc được nguyên văn, thì phải tạm đọc sách dịch. Như thế thì sự hiểu biết của ta cũng kể là hiểu biết tạm thời thôi. Văn dịch chỉ đưa đến cho ta một phương diện về tư tưởng của tác giả thôi, bởi người dịch cũng chỉ dịch theo sự hiểu biết tạm thời của họ. Câu nguyên văn, ta có thể ví như mặt biển rộng thênh thang, còn câu văn dịch không khác chi là mặt nước ao tù. 5. Sách quá nhiều chú giải Giữa ta và quyển sách cần phải có một sự tiếp xúc trực tiếp, không nên có nhiều kẻ xen vào “giành giựt” sự thông cảm của riêng ta. Có những quyển sách dịch, vừa dịch vừa chú giải quá rườm rà, kể lể ông này bà nọ đã nói gì về ý nghĩa của câu văn kia trải qua từng thời đại 6. Đọc sách cần phải đọc đi đọc lại nhiều lần Đọc đi đọc lại nhiều lần, chẳng phải để cho dễ nhớ, mà là bởi có nhiều thứ sách rất hàm súc: nếu chỉ đọc qua một bận, không tài nào hiểu nó được hết. Có nhiều quyển sách đọc đến lần thứ ba, thứ tư mới hiểu được. Đọc lần đầu, cần phải đi thật mau, để xem cái lề lối đại cương của quyển sách, chẳng khác nào xem trước cái họa đồ của một đô thị trước khi mình đi vào đó vậy. Đọc lần thứ hai, ta sẽ ngạc nhiên thấy những trở ngại trước kia tiêu tan lần lần. Tư tưởng bấy giờ liên lạc tiếp tục nhau, không bị gián đoạn nữa là vì mình đã biết được phương hướng của nó","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:4","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§5: ĐỌC NHỮNG GÌ? A. ĐỌC TIỂU THUYẾT TÂM LÝ Đọc tiểu thuyết có ích cho sự học là để giúp ta hiểu rõ hơn ý nghĩa đời sống của ta và đời sống của những người chung quanh ta thường bị thói quen hằng ngày che giấu. Cần phải đọc tiểu thuyết để đi sâu vào nhiều hoàn cảnh xã hội khác ta để tìm thấy chỗ “đại đồng” của bản tính con người sống dưới hình thức của những phong tục khác nhau, và để nghiên cứu mọi vấn đề quan trọng của nhân sinh như tội lỗi, ái tình và số mạng một cách cụ thể hơn, ngoài sự giải thích xuyên tạc của luân lý, đạo đức. Những tiểu thuyết hay bao giờ cũng đặt cho ta nhiều nghi vấn về cuộc đời và bắt ta suy nghĩ. Ngoài ra, những tiểu thuyết có mục đích khêu gợi những dục vọng tầm thường của ta để thỏa mãn óc tò mò bệnh hoạn đều là những sách cần phải vứt vào lò lửa. Về phương diện này, nên đọc tiểu sử các bậc danh nhân thế giới. Nó sẽ giúp ta thấy rõ tâm lý phức tạp của con người và những bậc phi phàm cũng chỉ phi phàm ở những mức độ nào thôi. Có nhiều lúc, họ cũng tầm thường và lại tầm thường hơn chúng ta nhiều. Kẻ nào đọc những loại tiểu thuyết nhảm sẽ làm mất thời giờ quý báu của họ và đáng ân hận hơn là rồi họ sẽ mất dần óc phán đoán và quân bình của tâm tình họ nữa. Thì giờ cần phải dành cho những sách chuyên môn, những sách tu luyện thân tâm cùng trí não. Những loại tiểu thuyết diễm tình xa sự thực dắt dẫn những kẻ đầu óc non nớt, nhất là phụ nữ đa cảm đa tình đi vào con đường phiêu lưu lãng mạn ngoài thực tế đến đỗi quên rằng đời là một trường tranh đấu các dục vọng, quyền lợi của con người, và chỉ có những kẻ nào thật có bản lĩnh mới sống nổi. Tính lãng mạn của những tiểu thuyết kiểu như Tố Tâm, Werther đã làm hư hỏng đầu óc thanh thiếu niên nam nữ không ít. Những tiểu thuyết nên đọc là những tiểu thuyết có tính cách soi đường chỉ nẻo, cắt nghĩa đời sống con người trải qua những giai đoạn đi tìm con đường lập chí. Loại tiểu thuyết ấy trong nền văn học chung rất ít. B. ĐỌC SỬ C. ĐỌC BÁO D. ĐỌC NHỮNG SÁCH VỀ THIÊN VĂN VÀ ĐỊA LÝ ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:5","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§6: HỌC NHỮNG GÌ? A. HỌC VIẾT VĂN B. HỌC DỊCH VĂN ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:6","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§7: BA YẾU TỐ CHÍNH ĐỂ XÂY DỰNG MỘT NỀN VĂN HÓA VỮNG VÀNG A. ÓC KHOA HỌC B. ÓC TRIẾT HỌC Học triết lý không có nghĩa là làm con mọt sách, nhớ vanh vách những gì kẻ khác đã nói, thuộc làu làu những hệ thống tư tưởng, những học thuyết của bá gia, để mà đem ra lòe người. Dù là những kẻ có cấp bằng tiến sĩ triết học mà chỉ là những kẻ giỏi thuộc lòng tư tưởng của kẻ khác, giỏi cái thuật nhớ dai để lặp đi nói lại cho kẻ khác nghe, chứ không biết suy nghĩ tư tưởng theo mình, kẻ ấy cũng vẫn là người chưa có óc triết học. Học triết học là để đào tạo cho mình cái khiếu ham suy nghĩ, biết tư tưởng, biết phán đoán, biết nhìn xét việc đời bằng một luồng mắt thống quan, biết tìm hiểu những ý nghĩ sâu kín bên trong các sự vật. Tôi có nhiều người bạn rất sành về triết học, họ lại là người có những mảnh bằng cao. Mỗi khi ngồi hầu chuyện với họ, tôi hết sức bực mình vì bị gán là kẻ mang đầu kẻ khác mà suy nghĩ. Bất cứ là mình nói với họ những gì thì đã bị họ cắt ngang và bảo: đó là của Hegel hay đó là của Descartes. Thật là những người đáng thương hại với cái vốn học vấn không “tiêu hóa” của họ. C. BIẾT XÚC CẢM Làm sao tạo cho mình một tâm hồn nhạy cảm? Một tình cảm dồi dào? Phương pháp thứ nhất là sống cho kẻ khác. Sống cho kẻ khác là biết hy sinh cho kẻ khác, lấy hạnh phúc của người làm hạnh phúc của mình, tức là biết cảm và biết yêu. Kẻ mà không biết yêu ai cả, không biết thương thân phận của những người khác ngoài cái thân phận của mình, tức là người sống một đời chỉ lo cho mình thôi, là người mà tâm hồn cằn cỗi, không thể là một con người văn hóa cao được. Người có văn hóa cao là người có tâm và có trí. Phương pháp thứ nhì để tạo cho mình một mối cảm xúc dồi dào phải cậy đến văn nghệ. Văn nghệ làm tăng gia xúc cảm của ta bằng cách khích động nó. Thi ca, kịch, nhạc, họa… sẽ gây cho ta những xúc cảm mỹ thuật dồi dào. Thường ta gặp một cảnh hoạn nạn thương tâm, ta hay đem lòng thương cảm, rồi nhân cái đau khổ của người, ta liên cảm đến cái đau khổ của ta, nhờ vậy ta thấy mình biết cảm và ra khỏi cái tâm trạng khô khan của một tâm hồn không biết rung động. ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:7","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":"§8: MỘT VÀI NGUYÊN TẮC LÀM VIỆC Nguyên tắc thứ nhất là đi từ cái dễ đến cái khó, và phải tin ở sự thành công. Đừng đặt mục đích của mình cao quá, quá cái khả năng và phương tiện của mình. Đặt cho mình một mục đích quá cao để rồi không thể đạt được thật là một việc chẳng những vô ích lại còn nguy hiểm là khác. Là vì sự thất bại sẽ giết mất lòng tự tin và làm tê liệt sức cố gắng của mình đi. Nguyên tắc thứ hai để làm việc có hiệu quả là phải làm việc đều đều, không nên để gián đoạn. Sự làm việc, có ngày ta hăng hái, có buổi ta uể oải, bơ phờ. Nhưng kinh nghiệm cho ta biết rằng, dù có hứng hay không có hứng, phải tự mình cương quyết đặt cho mình một kỷ luật là phải ngồi lại bàn viết, cầm cây viết lên, rồi thì “cái máy” của ta bắt đầu “ấm” lại và “mở máy” chạy như thường. Đừng bao giờ tự nhủ: “Hôm nay thấy trong mình không muốn làm việc. Vậy hẹn ngày mai!” Đó là cách nuôi dưỡng cái tính lười biếng của ta mà thôi. Nguyên tắc thứ ba là bất cứ học môn nào phải khởi đầu bằng những yếu tố đầu tiên của môn học ấy, nghĩa là khởi học lại những căn bản sơ đẳng và đừng bao giờ đốt giai đoạn. Nguyên tắc thứ tư: Biết lựa chọn. Biết lựa chọn là biết lựa chọn những công việc nào hợp với khả năng của mình. Và một khi đã lựa chọn xong thì hãy can đảm thực hiện cho kỳ được môn mình đã lựa chọn. Nguyên tắc thứ năm là phải biết quý thời giờ làm việc của ta và đặt cho nó thành một kỷ luật. Đối với người làm việc, cần phải có bổn phận là gạt bỏ những kẻ làm mất thời giờ của mình, tức là những kẻ phá quấy ta. Lễ độ, nhẫn nhục đối với họ đều là những lỗi lầm nặng. Phải hết sức gắt gao đối với hạng người này, đón rước họ tức là mình tự phá hoại đời mình đó. Đọc tiểu sử các bậc vĩ nhân anh hùng, ta thấy rõ rệt điều này: họ không bao giờ để ái tình họ trên sự nghiệp. Những bậc nam nhi mà đời họ chỉ biết nuông chiều theo tình cảm, phí thời giờ để làm vui lòng người đàn bà, suốt đời sẽ không làm nên đại nghiệp gì cả và có khi vì thế mà tan nát cả tương lai mình là khác. Bởi vậy, người đàn bà làm nên sự nghiệp cho chồng, giúp cho chồng đạt thành sở nguyện bằng sự hy sinh, không đòi hỏi nơi người đàn ông phải vì mình mà làm mất những thời giờ quý báu trong khi làm việc. Nguyên tắc thứ sáu là biết dùng thời giờ làm việc và tiết kiệm từng phút một. Nguyên tắc thứ bảy là hễ làm việc gì thì hãy làm cho hoàn tất, đừng phải trở lại một lần thứ hai. Đó là một thói quen rất tốt cho tất cả mọi công việc. Nguyên tắc thứ tám là muốn làm việc cho có hiệu quả thì phải có một sức khỏe dồi dào. Điều kiện đầu tiên của sự thành công là có được một thân thể tráng kiện. Và muốn được như thế, dĩ nhiên là phải có đủ những điều kiện sau đây: ăn uống đầy đủ, bổ dưỡng, nhẹ nhàng, vận động thân thể vừa vừa, đừng nặng nhọc lắm, thường sống ngoài trời có gió, có nắng và nhất là có được những giấc ngủ ngon lành. Sự vui vẻ cũng là một liều thuốc bổ nhất. ","date":"2021-06-07","objectID":"/note/toi-tu-hoc/:1:8","tags":["book"],"title":"[Highlight] Tôi tự học (Nguyễn Duy Cần)","uri":"/note/toi-tu-hoc/"},{"categories":null,"content":" Karate’s kid lessons No pain no gain Whether You Think You Can Or Think You Can’t, You’re Right. - Henry Ford It does not matter how slowly you go as long as you DO NOT STOP. - Confucius Do or do not. There is no try. - Yoda If you spend too much time thinking about a thing, you’ll never get it done - Bruce Lee ","date":"2021-05-31","objectID":"/note/20210531163643/:0:0","tags":["lesson","quote"],"title":"Lesson \u0026 quote","uri":"/note/20210531163643/"},{"categories":null,"content":" am/is/are am/is/are (questions) I am doing are you doing? I do/work/like etc. (present simple) ","date":"2021-05-29","objectID":"/note/en-grammar-elementary/:0:0","tags":["english","project","en-grammar-elementary"],"title":"Grammar in use - elementary","uri":"/note/en-grammar-elementary/"},{"categories":null,"content":" /iː/ and /ɪ/ /uː/ and /ʊ/ /ɑː/ and /ʌ/ /ɒ/ and /ɔː/ /e/ and /æ/ /ɜː/ /ɪə/ and /eə/ /eɪ/, /aɪ/ and /ɔɪ/ /əʊ/ and /aʊ/ ","date":"2021-05-29","objectID":"/note/en-pronunciation-elementary/:0:0","tags":["english","project","en-pronunciation-elementary"],"title":"Pronunciation in use - elementary","uri":"/note/en-pronunciation-elementary/"},{"categories":null,"content":"2022 Marugoto A2-1 ","date":"2021-05-29","objectID":"/note/goal/:0:1","tags":["goal"],"title":"🎯 Goal","uri":"/note/goal/"},{"categories":null,"content":"2021 Pronunciation in Use - Elementary Grammar in Use - Elementary ✅ Marugoto A1 Java 11 DevOps ","date":"2021-05-29","objectID":"/note/goal/:0:2","tags":["goal"],"title":"🎯 Goal","uri":"/note/goal/"},{"categories":null,"content":" lesson 1 ","date":"2021-05-24","objectID":"/note/20210524160032/:0:0","tags":["japanese","project","marugoto-a2-1"],"title":"Marugoto A2-1","uri":"/note/20210524160032/"},{"categories":null,"content":"Basic sentence おすしは　おいしかったです。でも、たかかったです。;The sushi was good. But, it was expensive. かぶきは　きれいでした。そして、おもしろかったです。;The kabuki play was beautiful and interesting. ","date":"2021-05-22","objectID":"/note/20210522201441/:0:1","tags":["japanese"],"title":"＿＿＿です。でも、＿＿＿です。/＿＿＿です。そして、＿＿＿です。","uri":"/note/20210522201441/"},{"categories":null,"content":"Use でも(nhưng), được dùng khi nói thêm một việc có nghĩa không tương đồng với sự việc đã có. そして(mà còn), được dùng khi nói thêm một việc có nghĩa tương đồng với sự việc đã có. ","date":"2021-05-22","objectID":"/note/20210522201441/:0:2","tags":["japanese"],"title":"＿＿＿です。でも、＿＿＿です。/＿＿＿です。そして、＿＿＿です。","uri":"/note/20210522201441/"},{"categories":null,"content":"Structure S1。 でも、 S2。 S1。 そして、 S2。 ","date":"2021-05-22","objectID":"/note/20210522201441/:0:3","tags":["japanese"],"title":"＿＿＿です。でも、＿＿＿です。/＿＿＿です。そして、＿＿＿です。","uri":"/note/20210522201441/"},{"categories":null,"content":"Examples ①アイスクリームを　食べました。おいしかったです。でも、小さかったです。;Tôi đã ăn kem. Rất ngon. Nhưng nhỏ. ②とうきょうタワーを　見ました。でも、ふじさんは見ませんでした。;Tôi đã ngắm tháp Tokyo. Nhưng chưa ngắm núi Phú Sĩ. ③そばを　食べました。たいへんでした。でも、おいしかったです。;Tôi đã ăn mì soba. Rất vất vả. Nhưng ngon. ④かぶきを　見ました。きれいでした。そして、おもしろかったです。;Tôi đã xem kịch kabuki. Nó đẹp. Và lại còn thú vị. ⑤べんきょうは　むずかしいです。そして、つまらないです。;Việc học thì khó. Và lại còn buồn tẻ nữa. ","date":"2021-05-22","objectID":"/note/20210522201441/:0:4","tags":["japanese"],"title":"＿＿＿です。でも、＿＿＿です。/＿＿＿です。そして、＿＿＿です。","uri":"/note/20210522201441/"},{"categories":null,"content":"Commentary A. 「でも」 dùng khi thêm một nội dung mang nghĩa phủ định vào một nội dung mang nghĩa khẳng định（①②）, hoặc khi thêm một nội dung mang nghĩa khẳng định vào một nội dung mang nghĩa phủ định（③）. (😥＋😁／😁＋😥) B. 「そして」 dùng khi thêm một nội dung mang nghĩa khẳng định vào một nội dung mang nghĩa khẳng định（④）, hoặc khi thêm một nội dung mang nghĩa phủ định vào một nội dung mang nghĩa phủ định (⑤). (😁＋😁／😥＋😥) ","date":"2021-05-22","objectID":"/note/20210522201441/:0:5","tags":["japanese"],"title":"＿＿＿です。でも、＿＿＿です。/＿＿＿です。そして、＿＿＿です。","uri":"/note/20210522201441/"},{"categories":null,"content":"Basic sentence おてらを　みました。それから、おみやげを　かいました。;I saw the temple. Then, I bought a souvenir. ","date":"2021-05-22","objectID":"/note/20210522103815/:0:1","tags":["japanese"],"title":"＿＿＿ます。それから、＿＿＿ます。","uri":"/note/20210522103815/"},{"categories":null,"content":"Use Dùng liên từ それから khi nói về nhiều hành động xảy ra theo thứ tự thời gian. ","date":"2021-05-22","objectID":"/note/20210522103815/:0:2","tags":["japanese"],"title":"＿＿＿ます。それから、＿＿＿ます。","uri":"/note/20210522103815/"},{"categories":null,"content":"Structure S1。 それから、 S2。 ","date":"2021-05-22","objectID":"/note/20210522103815/:0:3","tags":["japanese"],"title":"＿＿＿ます。それから、＿＿＿ます。","uri":"/note/20210522103815/"},{"categories":null,"content":"Examples ①ゆうめいな　おてらを　見ました。それから、おみやげを買いました。;I saw the famous temple. Then, I bought a souvenir. ②ホテルで　あさごはんを　食べました。それから、でんしゃで　あさくさに　行きました。;I had breakfast at the hotel. Then, I went to Asakusa on the train. ","date":"2021-05-22","objectID":"/note/20210522103815/:0:4","tags":["japanese"],"title":"＿＿＿ます。それから、＿＿＿ます。","uri":"/note/20210522103815/"},{"categories":null,"content":"Commentary A. Shows that S2 occurs following S1. ","date":"2021-05-22","objectID":"/note/20210522103815/:0:5","tags":["japanese"],"title":"＿＿＿ます。それから、＿＿＿ます。","uri":"/note/20210522103815/"},{"categories":null,"content":" Đối với Văn học thì chọn sách đã xuất bản từ lâu, của những tác giả nổi tiếng, được đánh giá tốt. Đối với sách kĩ thuật thì chọn sách xuất bản, tái bản càng mới càng tốt. Không chọn sách dài lê thê, sách gây nhàm chán, khó đọc. Tuy nhiên sách ngắn, hời hợt cũng không nên chọn. Đọc những sách mà hướng con người về Chân - Thiện - Mỹ. ","date":"2021-05-21","objectID":"/note/cach-chon-sach/:0:0","tags":["read","book"],"title":"Cách chọn sách","uri":"/note/cach-chon-sach/"},{"categories":null,"content":" Cheat sheet https://angular.io/cli https://material.angular.io/guide/getting-started https://teradata.github.io/covalent/v3/#/docs/get-started/overview ","date":"2021-05-20","objectID":"/note/angular/:0:0","tags":["programming"],"title":"Angular","uri":"/note/angular/"},{"categories":null,"content":" Bánh cá nướng Bánh mì mè đen Bánh flan Bánh Lava milo Mì tươi \u0026 hoành thánh Xúc xích gà Chè Những thứ không nên bỏ vào tủ lạnh Nước chanh gừng sả Trân châu đường đen Trứng gà ngâm tương Công thức làm bánh Waffle Air fryer Máy làm sữa Mức nhiệt độ ở lò vi sóng Ức gà sốt mật ong 1 Ức gà sốt mật ong 2 ","date":"2021-05-20","objectID":"/note/cooking/:0:0","tags":["cooking"],"title":"Bếp núc","uri":"/note/cooking/"},{"categories":null,"content":"Use Dùng liên từ でも khi kết nối một câu khẳng định và một câu phủ định về thứ gì đó. ","date":"2021-05-20","objectID":"/note/20210520215147/:0:1","tags":["japanese"],"title":"でも","uri":"/note/20210520215147/"},{"categories":null,"content":"Example かぶきは　ながかったです。でも、すばらしかったです。;The kabuki was long. But it was wonderful. ","date":"2021-05-20","objectID":"/note/20210520215147/:0:2","tags":["japanese"],"title":"でも","uri":"/note/20210520215147/"},{"categories":null,"content":"Use Thêm め vào sau ngày để chỉ thứ tự của ngày. ","date":"2021-05-20","objectID":"/note/20210520214313/:0:1","tags":["japanese"],"title":"～st/nd/rd/th day","uri":"/note/20210520214313/"},{"categories":null,"content":"Example いちにちめ;first day ふつかめ;second day みっかめ;third day よっかめ;fourth day ","date":"2021-05-20","objectID":"/note/20210520214313/:0:2","tags":["japanese"],"title":"～st/nd/rd/th day","uri":"/note/20210520214313/"},{"categories":null,"content":"Dùng “～かったです” hoặc “～でした” để diễn tả một cảm giác như thế nào trong quá khứ. おいしいです;It is delicious.→ おいしかったです;It was delicious. たいへんです;It is rough.→ たいへんでした;It was rough. ","date":"2021-05-19","objectID":"/note/20210519214952/:0:0","tags":["japanese"],"title":"Thì quá khứ của tính từ","uri":"/note/20210519214952/"},{"categories":null,"content":"🎯 みじかい　ブログを　よみます;Read a short blog あたらしい　レストランで　しょくじを　しました。 おいしかったです。 サッカーを　みに　いきました(^_^) コーヒーショップで　アルバイトを　しました(o´Д｀)=3 まちで　ともだちに　あいました。 いっしょに　のみに　いきました。 うちで　そうじと　せんたくを　しました。 たいへんでした。 こうえんで　こどもと　あそびました(^_^) ","date":"2021-05-17","objectID":"/note/20210517212242/:0:1","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 17 - かつどう","uri":"/note/20210517212242/"},{"categories":null,"content":"🎯 やすみに　なにを　したか　はなします;Say what you did on your days off やすみは　どうでしたか。;How was your day off/vacation? こうえんで　こどもと　あそびました。 たのしかったです。 (なにも　しませんでした。) (どこにも　いきませんでした。) そうですか。 A) ききて: サラさん、休みは　どうでしたか。;A) Interviewer: How was your holiday, Sara? B) サラ: たのしかったです。くにから　かぞくが　来ました。;B) Sara: It was fun. My family came to visit from my country. A) ききて: へえ、どこに　行きましたか。;A) Interviewer: Ooh, where did you go? B) サラ: きょうとに　行きました。たくさん　しゃしんを　とりました。;B) Sara: We went to Kyoto. I took lots of photos. A) ききて: よかったですね。;A) Interviewer: Sounds good. ","date":"2021-05-17","objectID":"/note/20210517212242/:0:2","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 17 - かつどう","uri":"/note/20210517212242/"},{"categories":null,"content":"🎯 やすみに　した　ことについて　どう　おもったか　かんたんに　いいます;Say briefly what you thought about your days off よかったです。;It was good/nice. すばらしかったです。;It was wonderful/amazing. きれいでした。;It was beautiful/pretty/tidy/clean. まあまあでした。;It was alright./It wasn’t bad. つかれました。;It was tiring. ひとが　おおかったです。;There were a lot of people. せんしゅうの　はなびたいかい 、 どうでしたか。 よかったです。 まあまあでした。 そうですか。 また いきますか。 はい、（たぶん）いきます。 わかりません。 （たぶん）いきません。 A) ききて: 休みは　どうでしたか。;A) Interviewer: How was your holidays? B) さとう: 土よう日、ともだちと　はなびたいかいに　行きました。;B) Sato: I went to a fireworks show with friends on Saturday. B) さとう: とても　きれいでした。;B) Sato: It was really pretty. B) さとう: でも、ひとが　おおかったです。ちょっと　つかれました。;B) Sato: But there were lots of people. I got a bit tired. A) ききて: らいねんも　行きますか。;A) Interviewer: Will you go again next year? B) さとう: はい、また　行きたいです。はなびが　だいすきですから。;B) Sato: Yes, I want to go again. I love fireworks, you see. ","date":"2021-05-17","objectID":"/note/20210517212242/:0:3","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 17 - かつどう","uri":"/note/20210517212242/"},{"categories":null,"content":"🎯 やすみの　ひの　ことについて　みじかい　ブログを　かきます;Write a short blog about your days off １０月２８日　（土） カラオケを　しました。 ビートルズを　うたいました。 たのしかったです。 らいしゅう　また　いきます。 ","date":"2021-05-17","objectID":"/note/20210517212242/:0:4","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 17 - かつどう","uri":"/note/20210517212242/"},{"categories":null,"content":" ヤン：さとうさん、きのう　なにを　しましたか。 さとう：新しい　デパートにいきました。 ヤン：そうですか。 さとう：デパートで　買いものを　しました。たのしかったです。 ヤン：そうですか。デパートは　どうでしたか。 さとう：とてもにぎやかでした ＿＿＿ました 1きのう　ともだちと　テニスをしました。 2［ いま　あさです。 ］ きょうの　ごご　まちにいきます。 3A:あした　なにを　しますか。 B:うちで　えいがをみます。 4A:きのう　がっこうに　いきましたか。 B:いいえ、いきませんでした。 5A:まいにち　なんじに　おきますか。 B:７じにおきます。 1きのう　パーティーに　いきました。とてもたのしかったです。 2わたしは　よく　ピザを　たべます。ピザはおいしいです。 3どようびに　えいがを　みました。あまりおもしろくなかったです。 1にぎやかです　-\u003e にぎやかでした 2にぎやかじゃないです -\u003e にぎやかじゃなかったです 3しずかです -\u003e しずかでした 4しずかじゃないです -\u003eしずかじゃなかったです 5きれいです -\u003e きれいでした 6きれいじゃないです -\u003e きれいじゃなかったです 1うれしいです -\u003e うれしかったです 2うれしくないです -\u003e うれしくなかったです 3おもしろいです -\u003e おもしろかったです 4おもしろくないです -\u003e おもしろくなかったです 5おいしいです -\u003e おいしかったです 6おいしくないです -\u003e おいしくなかったです 7いいです -\u003e よかったです 8よくないです -\u003e よくなかったです 1はなびは　とてもきれいでした。 2まちはにぎやかでした。 3よる、あまりしずかじゃなかったです。 1ホセさんはこうえんでこどもとあそびました。 2キムさんはうちでそうじをしました。 3あべさんはともだちとびじゅつかんにいきました。 4ジョイさんはうちでマンガをよみました。 かわい：やすみは　どこに　いきましたか。; シン：どこにもいきませんでした。 うちで　ゆっくりしました。 かわい：そうですか。 わたしもなにもしませんでした。 シン：それが　いちばん　いいですね。 すずき：パクさん、せんしゅうの　やすみは　どこに　いきましたか。 パク：どこにも　いきませんでした。うちに　いました。 すずき：そうですか。うちでなにを　しましたか。 パク：かんこくの えいがを　みました。 すずき：どうでしたか。 パク：おもしろかったです。 ホセ：カーラさん、あたらしい　ショッピングセンターに　いきましたか。 カーラ：はい、きのう　いきました。 ホセ：そうですか。どうでしたか。 カーラ：にぎやかでした。 ホセ：なにを　かいましたか。 カーラ：なにも　かいませんでした。 ホセ：そうですか。 せんしゅうの　日よう日に　ともだちに　あいました。 わたしたちは　いっしょに　しょくじを　しました。 いろいろな　はなしを　しました。 とても　たのしかったです。 せんしゅうの　土よう日に　つまは　買いものに いきました。 わたしは　うちで　そうじを　しました。 わたしは　そうじが　あまり　すきじゃないです。 たいへんでした。 日よう日に　たんじょうびの　パーティーを　しました。 うちに　こどもの　かぞくが　きました。 いっしょに　にわで　バーベキューを　しました。 まごに　プレゼントを　もらいました。 うれしかったです。 1A:あした なにを しますか。 B:いえで えいがを見ます。 2A:きのう 買いものに いきましたか。 B:いいえ、いきませんでした。 3A:ほんやで なにを 買いましたか。 B:なにも買いませんでした。 4わたしは よく おおさかに いきます。 おおさかは とてもおもしろいです。 5せんしゅう はなびを 見ました。はなびはきれいでした。 ","date":"2021-05-17","objectID":"/note/20210517212242/:0:5","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 17 - かつどう","uri":"/note/20210517212242/"},{"categories":null,"content":"🎯 かんたんな　Eメールを　よみます;Read a simple E-mail きょう　マリアおばあちゃんと　日本に　きました。うれしいです！ きょう　あさくさに　いきました。 にぎやかでした。 そばを　たべました。たいへんでした。 でも、おいしかったです。 かいものしました！　これ、かいました！ ","date":"2021-05-17","objectID":"/note/20210517212443/:0:1","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 18","uri":"/note/20210517212443/"},{"categories":null,"content":"🎯 りょこうの　とき　なにを　したか　はなします;Say what you did on your travels 8月 にとうきょう に　いきました。 そうですか。 とうきょうで　なにを　しましたか。 かぶきを　みました 。 どうでしたか。 すばらしかったです 。 そうですか。 ながかったです 。でも、すばらしかったです 。 それから、おみやげを　かいました。 これ、どうぞ。 どうも　ありがとうございます。 ","date":"2021-05-17","objectID":"/note/20210517212443/:0:2","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 18","uri":"/note/20210517212443/"},{"categories":null,"content":"🎯 つぎの　りょこうは　どこに　いきたいか　いいます;Say where you want to go next time つぎは　どこに　いきたいですか。;Where do you want to go next time? きょうと に　いきたいです。 A) まつもと: つぎの　りょこうは　どこに　行きたいですか。 B) サラ: そうですね。つぎは　おきなわに　行きたいです。 A) まつもと: そうですか。おきなわは　きれいですよ。 A) まつもと: きょねん　行きました。とても　よかったです。 B) サラ: へえー。 つぎは　どこに　行きたいですか。 れい: きょうとに　行きたいです。 そうですか。つぎは　わたしも　行きたいです。 ","date":"2021-05-17","objectID":"/note/20210517212443/:0:3","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 18","uri":"/note/20210517212443/"},{"categories":null,"content":" のりか：東京は　どうでしたか。 パウロ：たのしかったですよ。 パウロ：ゆうめいな　おてらを　見ました。 それから、おみやげを　買いました。 のりか:よかったですね。 1ホテルで　あさごはんを　たべました。 それから、でんしゃで　あさくさに　いきました。 2しぶやで　ふくを　かいました。 それから、おおきい　こうえんに　いきました。 3ホテルで　ともだちに　あいました。 それから、いっしょに　かぶきを　みに　いきました。 4東京タワーに　いきました。 それから、でんしゃで　よこはまに　いきました。 のりか：東京で　なにを食べましたか。 パウロ：そばを　食べました。 のりか：そうですか。どうでしたか。 パウロ：たいへんでした。 でも、おいしかったです。 のりか：そうですか。 1そばを　たべました。たいへんでした。でもおいしかったです。 2かぶきを　みました。きれいでした。そしておもしろかったです。 3アイスクリームを　たべました。おいしかったです。でもちいさかったです。 4まつりを　みに　いきました。にぎやかでした。そしてたのしかったです。 すずき：アリさん、日本で　東京タワーに　行きましたか。 アリ：はい、行きました。 すずき：そうですか。 じゃあ、しんかんせんに　のりましたか。 アリ：いいえ、のりませんでした。 すずき：そうですか。 アリ：つぎは　しんかんせんにのりたいです V Thể khẳng định Thể phủ định 1みます みたいです みたくないです 2たべます たべたいです たべたくないです 3いきます いきたいです いきたくないです 4かいます かいたいです かいたくないです 5のります のりたいです のりたくないです 6します したいです したくないです 東京タワーをみました。 でも、ふじさんはみませんでした。 つぎは　ふじさんをみたいです。 そばと　うどんをたべました。 でも、ラーメンはたべませんたべませんでした。 つぎは　ラーメンをたべたいです ふくと　アクセサリーをかいました。 でも、きものはかいませんでした。 つぎは　きものをかいたいです。 Jポップの　コンサートに　いきました。でも、カラオケはしませんでした。 つぎは　カラオケをしたいです。 やすみは　どうでしたか。 たのしかったですよ。東京に　いきました。 よかったですね。 東京で　なにを　しましたか。 かぶきを　みました。 それから、　そばを　たべました。 そばは　どうでしたか。 たいへんでした。 でも、おいしかったです。 そうですか。 つぎは　きょうとに　いきたいです。 ことしの　8 月に　わたしは　ひとりで　日本に行きました。ひこうきで　行きました。 東京で　ともだちに　会いました。それから、いっしょに ゆうめいな　おてらを　見に　行きました。とても おもしろかったです。でも、あまり　買いものを しませんでした。 つぎは　東京で　たくさん　買いものを　したいです。 1いつ　いきましたか。 ことしの　8月に　いきました。 2どこに　いきましたか。 にほんに　いきました。 とうきょうに　いきました。 3だれと　いきましたか。 ひとりで　いきました。 4どうやって　いきましたか。 ひこうきで　いきました。 5なにを　しましたか。 ゆうめいな　おてらを　みに　いきました。 ともだちに　あいました。 6どうでしたか。 とても　おもしろかったです。 7つぎは　なにを　したいですか。 かいものを　したいです。 1かぶきを 見ました。きれいでした。でも、ながかったです。 2パーティーに 行きました。とても にぎやかでした。 でも、あまり たのしくなかったです。 3ともだちと しょくじを しました。たのしかったです。 そして、おいしかったです。 4日本で ちかてつに のりました。たいへんでした。 そして、たかかったです。 5はなびを　見ました。それから、レストランに　行きました。 ","date":"2021-05-17","objectID":"/note/20210517212443/:0:4","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 18","uri":"/note/20210517212443/"},{"categories":null,"content":" 行いきます;to go, dùng khi người nói đứng tại vị trí xuất phát và đi tới điểm đích khác./đi đến 来きます;to come, dùng khi người nói đứng tại điểm đích và đến từ nơi khác./đang ở 会あいます;to meet 休やすみます;to rest / take a rest 日にちよう日び;Sunday 東京とうきょう;Tokyo 今年ことし; năm nay 来年らいねん;năm tới 先月せんげつ;tháng trước 勉強べんきょう;học 難むずかしい;khó 優やさしい;dễ 祭まつり;lễ hội 長ながい;dài, lâu ","date":"2021-05-17","objectID":"/note/20210517212440/:0:0","tags":["japanese"],"title":"Marugoto A1 lesson 18 - Words","uri":"/note/20210517212440/"},{"categories":null,"content":"Basic sentence わたしは　アクセサリーが　ほしいです。;I want some accessories. ","date":"2021-05-16","objectID":"/note/20210516093044/:0:1","tags":["japanese"],"title":"＿＿＿が　ほしいです","uri":"/note/20210516093044/"},{"categories":null,"content":"Use Dùng khi nói về thứ mà ai đó muốn hoặc muốn mua. ","date":"2021-05-16","objectID":"/note/20210516093044/:0:2","tags":["japanese"],"title":"＿＿＿が　ほしいです","uri":"/note/20210516093044/"},{"categories":null,"content":"Structure N1(Person) は N2 が ほしいです。 なに が ほしいですか。 ","date":"2021-05-16","objectID":"/note/20210516093044/:0:3","tags":["japanese"],"title":"＿＿＿が　ほしいです","uri":"/note/20210516093044/"},{"categories":null,"content":"Examples ①わたしは　Tシャツが　ほしいです。;I want a T-shirt. ②新しい　テレビが　ほしいです。;I want a new television. ③A：シンさんは　なにが　ほしいですか。;A: What do you want, Mr. Shin? B：かっこいい　くるまが　ほしいです。;B: I want a cool car. ④A：どんな　アクセサリーが　ほしいですか。;A: What kind of accessories do you want? B：かわいい　アクセサリーが　ほしいです。;B: I want some cute accessories. ","date":"2021-05-16","objectID":"/note/20210516093044/:0:4","tags":["japanese"],"title":"＿＿＿が　ほしいです","uri":"/note/20210516093044/"},{"categories":null,"content":"Commentary A. 「ほしい」 is treated like an I-adjective. The conjugation is the same as other I-adjectives. ","date":"2021-05-16","objectID":"/note/20210516093044/:0:5","tags":["japanese"],"title":"＿＿＿が　ほしいです","uri":"/note/20210516093044/"},{"categories":null,"content":"Basic sentence わたしは　カーラさんに　はなを　あげます。;I give Carla some flowers. ","date":"2021-05-16","objectID":"/note/20210516095524/:0:1","tags":["japanese"],"title":"＿＿＿に＿＿＿を　あげます","uri":"/note/20210516095524/"},{"categories":null,"content":"Use Được dùng khi nói về cái gì được cho ai đó. ","date":"2021-05-16","objectID":"/note/20210516095524/:0:2","tags":["japanese"],"title":"＿＿＿に＿＿＿を　あげます","uri":"/note/20210516095524/"},{"categories":null,"content":"Structure N1(Person) は N2(Person) に N3 を あげます。 だれ に あげますか。 なに を あげますか。 ","date":"2021-05-16","objectID":"/note/20210516095524/:0:3","tags":["japanese"],"title":"＿＿＿に＿＿＿を　あげます","uri":"/note/20210516095524/"},{"categories":null,"content":"Examples ①あべさんは　カーラさんに　ハンカチを　あげます。;Mr. Abe gives Carla a handkerchief. ②きょねんの　たんじょうびに　ははに　ぼうしを　あげました。;I gave my mother a hat for her birthday last year. ③A：ホセさんは　カーラさんに　なにを　あげますか。;A: What will you give Carla, Jose? B：チョコレートを　あげます。;B: I’ll give her some chocolates. ④A：きれいな　ハンカチですね。だれに　あげますか。;A: That’s a pretty handkerchief, isn’t it? Who will you give it to? B：ははに　あげます。;B: I’ll give it to my mother. ","date":"2021-05-16","objectID":"/note/20210516095524/:0:4","tags":["japanese"],"title":"＿＿＿に＿＿＿を　あげます","uri":"/note/20210516095524/"},{"categories":null,"content":"Commentary A. N2 can never be the speaker. B. In cases when N1 is the speaker or it is understood who N1and N2 are, 「N1は」 and/or 「N2に」 are sometimes omitted. (③④) ","date":"2021-05-16","objectID":"/note/20210516095524/:0:5","tags":["japanese"],"title":"＿＿＿に＿＿＿を　あげます","uri":"/note/20210516095524/"},{"categories":null,"content":"🎯 かいたい　ものについて　はなします;Talk about what you want to buy Tシャツが　ほしいです。;I want a T-shirt. えはがき８まい　ほしいです。;I want eight picture postcards. かわいいハンカチが３まい　ほしいです。;I want three pretty handkerchiefs. だれに　あげますか。 ともだち に　あげます。 なにを　あげますか。 えはがき を　あげます。 A) ダン: あ、おみやげ、ほしいです。 B) わだ: だれに　あげますか。 A) ダン: いもうとに　あげます。 B) わだ: なにを　あげますか。 A) ダン: おおさかの　おみやげ、あげます。 B) わだ: じゃあ、ここが　いいですよ。 ","date":"2021-05-15","objectID":"/note/20210515160654/:0:1","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 15","uri":"/note/20210515160654/"},{"categories":null,"content":"🎯 ほしい　ものが　どこで　かえるか　はなします;Talk about where to shop for something you want どこで　買えますか。;Where can I buy it? なにが　ほしいですか。 おもしろい　Ｔシャツ が　ほしいです。 どこで　かえますか。 はらじゅく が　いいですよ。 A) まい: じかんは　だいじょうぶですか。 B) ダン: はい。 A) まい: じゃあ、いっしょに　かいものに　いきませんか。 B) ダン: あ、ぼく、新しい　かばんが　ほしいです。どこで　買えますか。 A) まい: かばんですか。じゃあ、デパートに　いきましょう。 B) ダン: はい。 ","date":"2021-05-15","objectID":"/note/20210515160654/:0:2","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 15","uri":"/note/20210515160654/"},{"categories":null,"content":" すずき：カーラさんはなにがほしいですか。 カーラ：アクセサリーがほしいです。 すずき：どんなアクセサリーがほしいですか。 カーラ：かわいいアクセサリーがほしいです。 キム：すずきさんは　カーラさんの　バースデーパーティーに　いきますか。 キム：すずきさんは　カーラさんになにを　あげますか。 すずき：わたしは　アクセサリーをあげます。 キム：アクセサリーですか。いいですね。 たなか：かっこいいとけいですね。 アニス：ありがとう。 きょねん日本で買いました。 たなか：このアクセサリーも。 アニス：え、これ？ともだちにもらいました かいます　ー＞　かいました かいません　ー＞　かいませんでした 1あげます　ー＞　あげました 2あげません　ー＞　あげませんでした 3もらいます　ー＞　もらいました 4もらいません　ー＞　もらいませんでした 5します　ー＞　しました 6しません　ー＞　しませんでした 1きのう　ノートを　3さつかいました。 2きょねん　にほんで　かわいい　ふくを　かいました。くつはかいませんでした。 3きょねんの　たんじょうびに　ははに　ぼうしをあげました。 4らいしゅうの　にちようびに　ともだちと　かいものをします。 アニスさんはおねえさんにかさをもらいました アニスさんはともだちにアクセサリーをもらいました アニスさんはおとうさんにビデオカメラをもらいました さかいさん、おげんきですか。ロベルタです。 わたしは　きのう　イタリアの　うちに かえりました。 日本で　おみやげを　たくさん　かいました。 ははに　おしゃれな　かさを　あげました。 かっこいい　とけいも　かいました。 ちちに　あげました。 Tシャツを　2まい　かいました。 あにと　あねに　あげました。 さかいさんも　わたしの　くにに　あそびに きて ください。 「せんしゅうの　かいもの」 わたしはせんしゅうかいものにいきました。 ほんやでざっしをかいました。 はなやではなをかいました。 ワインを2ほんかいました。 1きのう ほんを ３さつもらいました。 2あした ともだちと カラオケにいきます。 3きょねん イタリアで かばんを買いました。 くつは買いませんでした。 4きょねん わたしは ははにとけいをもらいました。 5すずきさんは カーラさんにはなをあげます。 6かっこいい くるまがほしいです。 7あにと あねにおみやげをあげました。 ","date":"2021-05-15","objectID":"/note/20210515160654/:0:3","tags":["japanese","marugoto-a1"],"title":"Marugoto A1 lesson 15","uri":"/note/20210515160654/"},{"categories":null,"content":" これ;chỉ thứ mà ở gần cả 2 người nghe nói あれ;chỉ thứ mà ở xa cả 2 người nghe nói こうやって;khi mô tả mà có thêm hành động, cử chỉ cho dễ hiểu Tシャツ;Áo thun えはがき/ポストカード;bưu thiếp かさ;cái dù ハンカチ;khăn tay, khăn mu soa 日本的にほんてき;đồ thông thường của Nhật 面白おもしろい;thú vị お洒落しゃれ;hợp thời trang, phong cách 上あげる;cho ai đó 〜を　上あげます;cho (quà) 〜を　貰もらいます;nhận (quà) お土産みやげ/プレゼント;quà lưu niệm 買かいもの;mua sắm 服ふく;áo quần 靴くつ;giày 帽子ぼうし;mũ ","date":"2021-05-15","objectID":"/note/20210515160641/:0:0","tags":["japanese"],"title":"Marugoto A1 lesson 15 - Words","uri":"/note/20210515160641/"},{"categories":null,"content":" Trang How To Ask Questions The Smart Way chứa hết những gì cần biết khi đặt câu hỏi. Tóm gọn thì: Tự tìm hiểu trước. Ghi rõ những cách mình đã thử và phỏng đoán. Ghi rõ cái mà mình muốn đạt được. Cung cấp nhiều thông tin nhất có thể. Tôn trọng thời gian và công sức của người khác. Khi hỏi thì trung thực, rõ ràng và ngắn gọn, đi thẳng vào trọng tâm, tránh XY problem. Tìm hiểu ở StackOverFlow trước, rồi đến GitHub, bí quá thì email. ","date":"2021-05-13","objectID":"/note/20210513114054/:0:0","tags":["rule"],"title":"Cách hỏi","uri":"/note/20210513114054/"},{"categories":null,"content":"Reference https://twitter.com/cassiecodes/status/1303770566793592834 No Hello How do I ask a good question? Don’t ask to ask, just ask Stack Overflow question checklist | Jon Skeet’s coding blog ","date":"2021-05-13","objectID":"/note/20210513114054/:1:0","tags":["rule"],"title":"Cách hỏi","uri":"/note/20210513114054/"},{"categories":null,"content":"☘️ Cuộc sống Không nên lãng phí thời gian. Đặt ra mục tiêu, lên kế hoạch. Mạnh dạn, chủ động, cởi mở. Không sợ hãi, không từ bỏ, không than vãn. Đừng so sánh bản thân với người khác. Không phán xét người khác. Thử đặt mình vào vị trí của họ. Hãy tử tế và thân thiện. Không lừa bản thân hay người khác. ","date":"2021-05-13","objectID":"/note/rule/:0:1","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"💪 Sức khỏe Dậy sớm. Tập thể dục, nhảy dây, đạp xe. Hạn chế ăn bánh kẹo. Uống nhiều nước, trà, hạn chế cà phê, không uống trà sữa. Ngồi đúng tư thế, không nên ngồi nhiều quá. Ngủ đủ giấc (~8h). ","date":"2021-05-13","objectID":"/note/rule/:0:2","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"📖 Học hành Học từ căn bản. Luôn học thêm những gì mới mẻ nhưng phải có mục đích rõ ràng. Dù có giỏi, thông mình đến mấy thì cũng cần thời gian để học. Ghi chú lại toàn bộ, thực hiện spaced repetition. Khi không biết thì hỏi. Cách dùng Anki hiệu quả. How to learn language. ","date":"2021-05-13","objectID":"/note/rule/:0:3","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"🧰 Làm việc Chia nhỏ hết mức có thể. Làm từ dễ tới khó, tin rằng bản thân sẽ làm được. Duy trì thói quen. Áp dụng Getting Thing Done. Todo.txt: Future-proof task tracking in a file you control Đã làm gì thì phải làm cho hoàn chỉnh, để khỏi quay lại lần hai. ","date":"2021-05-13","objectID":"/note/rule/:0:4","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"📝 Viết Viết theo ý mình hiểu, tránh copy \u0026 paste. Không viết trùng nội dung, dùng link theo phương pháp Zettelkasten. ","date":"2021-05-13","objectID":"/note/rule/:0:5","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"📚 Đọc Chọn sách hay. Trong khi đọc thì highlight ý chính, hết một chương thì tóm tắt, ghi chú lại. ","date":"2021-05-13","objectID":"/note/rule/:0:6","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"💻 Lập trình Chạy được \u003e chạy đúng \u003e dễ đọc \u003e nhanh (nếu cần). Ưu tiên đơn giản. ","date":"2021-05-13","objectID":"/note/rule/:0:7","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"💰 Tài chính JARS System of Money Management Phân biệt cái mình cần và muốn. Wishlist Những món đồ giúp cải thiện cuộc sống ","date":"2021-05-13","objectID":"/note/rule/:0:8","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"🔑 Authentication GitHub \u003e Google \u003e Facebook \u003e Personal account. ","date":"2021-05-13","objectID":"/note/rule/:0:9","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":"📷 Hình ảnh Chỉ giữ những hình đẹp, kỉ niệm. Không chia sẻ công khai. ","date":"2021-05-13","objectID":"/note/rule/:0:10","tags":["rule"],"title":"Một vài quy tắt cho bản thân","uri":"/note/rule/"},{"categories":null,"content":" // This is a single line comment /* This is a multiple lines comment */ /** This is a Javadoc */ /* * /* */ * This is an error */ ","date":"2021-05-11","objectID":"/note/20210511173752/:0:0","tags":["java"],"title":"Java comments","uri":"/note/20210511173752/"},{"categories":null,"content":" Class là đơn vị cấu trúc căn bản của Java. Một object là một runtime instance của class trong bộ nhớ. Một reference là một variable mà trỏ đến một object. Java comments Field and method ","date":"2021-05-10","objectID":"/note/20210510183943/:0:0","tags":["java"],"title":"Understanding the Java Class Structure","uri":"/note/20210510183943/"},{"categories":null,"content":" Classes are the basic building blocks. An object is a runtime instance of a class in memory. An object is often referred to as an instance since it represents a single representation of the class. A reference is a variable that points to an object. Java comments Field and method ","date":"2021-05-10","objectID":"/note/20210510183943_en/:0:0","tags":["java"],"title":"Understanding the Java Class Structure","uri":"/note/20210510183943_en/"},{"categories":null,"content":"Basic sentence どようびに　コンサートが　あります。;Có buổi hòa nhạc vào thứ bảy. ","date":"2021-05-01","objectID":"/note/20210501223855/:0:1","tags":["japanese"],"title":"＿＿＿に＿＿＿が　ありま","uri":"/note/20210501223855/"},{"categories":null,"content":"Use Dùng khi nói sự kiện, sự việc được tổ chức vào lúc nào ","date":"2021-05-01","objectID":"/note/20210501223855/:0:2","tags":["japanese"],"title":"＿＿＿に＿＿＿が　ありま","uri":"/note/20210501223855/"},{"categories":null,"content":"Structure N が あります。 ～がつ に N が あります。 ～にち に N が あります。 ～ようび に N が あります。 ～じ に N が あります。 きょう N が あります。 らいしゅう N が あります。 らいげつ N が あります。 らいねん N が あります。 なに が ありますか。 いつ N が ありますか。 ","date":"2021-05-01","objectID":"/note/20210501223855/:0:3","tags":["japanese"],"title":"＿＿＿に＿＿＿が　ありま","uri":"/note/20210501223855/"},{"categories":null,"content":"Examples ①はなびたいかいが　あります。 Có lễ hội bắn pháo hoa. ②日よう日に　パーティーが　あります。 Có bữa tiệc vào chủ nhật. ③A：いつ　たいこコンサートが　ありますか。 A: Khi nào có buổi hòa nhạc trống? B：４月３０日に　あります。. B: Có vào ngày 30/4. ④A：パーティーは　いつ　ありますか。 A: Bữa tiệc có khi nào? B：あした　あります。 B: Có vào ngày mai. ","date":"2021-05-01","objectID":"/note/20210501223855/:0:4","tags":["japanese"],"title":"＿＿＿に＿＿＿が　ありま","uri":"/note/20210501223855/"},{"categories":null,"content":"Commentary A. 「Nがあります」 dùng để diễn tả việc có hành động, sự việc. B. 「に」 thể hiện thời gian mà N đã xảy ra sự việc. C. Sau các từ như 「今(いま)」「きのう」「きょう」「あした」 và nghi vấn từ 「いつ」 thì không thêm 「に」. （④） ","date":"2021-05-01","objectID":"/note/20210501223855/:0:5","tags":["japanese"],"title":"＿＿＿に＿＿＿が　ありま","uri":"/note/20210501223855/"},{"categories":null,"content":"Những món đồ nên có trong nhà Khoan. Búa. Bộ tuốt vít. Bút thử điện. ","date":"2021-04-29","objectID":"/note/diy/:1:0","tags":[],"title":"DIY","uri":"/note/diy/"},{"categories":null,"content":"Kiến thức Cách chọn mua cảo (vam) kẹp gỗ: từ cơ bản đến nâng cao Hướng dẫn cách sử dụng mũi khoan, máy khoan hiệu quả và an toàn - ThichDIY 101 Đinh vít các loại và công dụng sử dụng - MRO Việt Nam Kiến thức cơ bản về gỗ công nghiệp ","date":"2021-04-29","objectID":"/note/diy/:2:0","tags":[],"title":"DIY","uri":"/note/diy/"},{"categories":null,"content":"Idea Cabinet Project Unity ","date":"2021-04-29","objectID":"/note/diy/:3:0","tags":[],"title":"DIY","uri":"/note/diy/"},{"categories":null,"content":"Note Phụ kiện ống nước ","date":"2021-04-29","objectID":"/note/diy/:4:0","tags":[],"title":"DIY","uri":"/note/diy/"},{"categories":null,"content":"This is a graph ","date":"2021-04-27","objectID":"/graph/:0:0","tags":[],"title":"Graph of my public notes","uri":"/graph/"},{"categories":null,"content":"Định nghĩa Project là một list các task mà liên quan tới một goal, có deadline Ví dụ như là viết một bài viết, ghi chú,.. Area of responsibility là một lĩnh vực các hoạt động cần được duy trì theo thời gian Ví dụ như là Sức khỏe, Tài chính, Sở thích, Du lịch, Học tập,.. Resource Archive là nơi chứa những project đã hoàn thành hoặc tạm hoãn, area mà không muốn duy trì nữa và resource mà không còn quan tâm nữa. ","date":"2021-04-27","objectID":"/note/20210427202002/:0:1","tags":["productive"],"title":"PARA method","uri":"/note/20210427202002/"},{"categories":null,"content":"Project và Area of responsibility Active project Có goal cần đạt được. Có deadline. Area of responsibility Tiêu chuẩn để duy trì. Không có ngày kết thúc. Ví dụ: Chạy bộ là project, Sức khỏe là area. Đi nghỉ mát đâu đó là project, Du lịch là area. ","date":"2021-04-27","objectID":"/note/20210427202002/:0:2","tags":["productive"],"title":"PARA method","uri":"/note/20210427202002/"},{"categories":null,"content":"Note Nếu một project mà không có goal thì nó là “Sở thích”. Nếu không có cam kết những thứ mà mình muốn, thì đó chỉ là làm cho vui. Nếu có goal nhưng không có project tương ứng để thực hiện, thì đó chỉ là mơ mộng. ","date":"2021-04-27","objectID":"/note/20210427202002/:0:3","tags":["productive"],"title":"PARA method","uri":"/note/20210427202002/"},{"categories":null,"content":"Reference The PARA Method: A Universal System for Organizing Digital Information - Forte Labs ","date":"2021-04-27","objectID":"/note/20210427202002/:1:0","tags":["productive"],"title":"PARA method","uri":"/note/20210427202002/"},{"categories":null,"content":"Hi, I’m Huka, a software developer and a DIY-er. This is my 🌱 Digital Garden where I share what I’ve learned, my thoughts, opinions. ☕ Java language Spring Go language 🇺🇸 English 🇯🇵 Japanese 🔨 DIY 🎬 Movie 🎮 Game 📚 Book 💪 Health ","date":"2021-04-27","objectID":"/note/welcome_en/:0:0","tags":[],"title":"Welcome","uri":"/note/welcome_en/"},{"categories":null,"content":"Mình là Hùng, một lập trình viên với niềm đam mê mãnh liệt với DIY. Đây là 🌱 Digital Garden nơi mà mình chia sẻ một vài quan điểm, suy nghĩ, chủ đề mà mình quan tâm, những gì mình học được như là: 🎯 Goal Một vài quy tắt cho bản thân ☕ Java language Go language DevOps System Design 🇺🇸 English 🇯🇵 Japanese 🔨 DIY 🎬 Movie 🎮 Game 📚 Book 📕 Manga 💪 Health 💕 Relationship Angular 🍳 Bếp núc Linux Windows Chrome extensions ✍ Writing Lesson \u0026 quote Cheat sheet Tool ","date":"2021-04-27","objectID":"/note/welcome/:0:0","tags":[],"title":"Xin chào","uri":"/note/welcome/"},{"categories":null,"content":"Pronunciation Pronunciation in Use - Elementary English words that you pronounce INCORRECTLY ","date":"2021-04-13","objectID":"/note/english/:1:0","tags":["english","language"],"title":"🇺🇸 English","uri":"/note/english/"},{"categories":null,"content":"Grammar Từ loại Grammar in Use - Elementary ","date":"2021-04-13","objectID":"/note/english/:2:0","tags":["english","language"],"title":"🇺🇸 English","uri":"/note/english/"},{"categories":null,"content":"Vocabulary ","date":"2021-04-13","objectID":"/note/english/:3:0","tags":["english","language"],"title":"🇺🇸 English","uri":"/note/english/"},{"categories":null,"content":"Book Pronunciation in use English Grammar in use Vocabulary in use ","date":"2021-04-13","objectID":"/note/english/:4:0","tags":["english","language"],"title":"🇺🇸 English","uri":"/note/english/"},{"categories":null,"content":"Reference https://o.voz.vn//showpost.php?p=132832689\u0026postcount=27 http://www.i18nguy.com/chaos.html ","date":"2021-04-13","objectID":"/note/english/:5:0","tags":["english","language"],"title":"🇺🇸 English","uri":"/note/english/"},{"categories":null,"content":"Upgrade version npm uninstall -g @angular-cli npm install -g @angular/cli@latest ","date":"2021-04-12","objectID":"/note/20210405161236/:0:1","tags":["angular","cheat-sheet"],"title":"Angular cheat sheet","uri":"/note/20210405161236/"},{"categories":null,"content":" 4 quả trứng gà 80g đường 30ml sữa 140g bột mì đa dụng (8 ngon hơn 11) 10g bột bắp 15ml dầu ăn 4 cục phô mai 5g chà bông (ruốc heo) 1 miếng chanh nhỏ 1 thìa vani 5g baking powder (không có cũng được) ♨ CÁC BƯỚC LÀM BÁNH CÁ NƯỚNG (TAIYAKI) NHÂN PHÔ MAI ĐƠN GIẢN TẠI NHÀ: Trộn đều bột mì, bột bắp, baking powder lại với nhau. Cho trứng gà, chanh, vani, muối vào thau đánh với số nhỏ cho trứng nổi bọt. Cho đường vào rồi bật số lớn đánh đến khi trứng bông lên. Cho tiếp dầu, sữa vào đánh tiếp với số nhỏ. Khi sữa dầu đã tan, cho từ từ lượng bột vào. Đánh cho bột hòa quyện với trứng. Làm nóng khuôn con cá, thoa dầu, cho bột vào 1/2 khuôn. Cho tiếp phô mai, ruốc. Đổ bột đầy khuôn rồi đóng khuôn lại. Nướng 2 mặt, mỗi mặt từ 1 phút - 2 phút. ♨ BÍ QUYẾT LÀM BÁNH CÁ NƯỚNG (TAIYAKI) NHÂN PHÔ MAI THƠM NGON HẤP DẪN: Bột mì làm bánh cá nướng nên chọn bột mì số 8, hoặc bột mì làm bánh bông lan. Bánh sẽ có độ mềm mại hơn. Nếu làm bánh cá để kinh doanh, bán thì nên sử dụng bột nổi (baking powder), bột nổi sẽ giúp bánh cá phồng, xốp lâu hơn. Muốn bánh cá thơm ngon hơn, không tanh trứng, có thể dùng bột Lion thay cho bột bắp ","date":"2021-04-12","objectID":"/note/20210406104120/:0:0","tags":["cooking"],"title":"Bánh cá nướng","uri":"/note/20210406104120/"},{"categories":null,"content":"5 cốc 80-100ml Caramel 80g đường 15ml nước 3 lòng đỏ 3 trứng nguyên quả Khấy (không đánh) 500ml sữa 90g đường 200g whipping Lọc qua rây Nướng cách thủy 40-50' 180* Hấp 30-40' (10' mở nắp 10s) ","date":"2021-04-12","objectID":"/note/20210406103831/:0:0","tags":["cooking"],"title":"Bánh flan","uri":"/note/20210406103831/"},{"categories":null,"content":"40g milo 15ml nước nóng 1 quả trứng lớn 15g đường 25g bột mì đa dụng 42g bơ nhạt đun chảy 1 milo + nước nóng 2 trứng + đường -\u003e bột mì đa dụng -\u003e đổ 1 vào 2 -\u003e bơ chảy hấp hoặc nướng 7-8' (khuôn cupcake 7cm) ","date":"2021-04-12","objectID":"/note/20210406103856/:0:0","tags":["cooking"],"title":"Bánh Lava milo","uri":"/note/20210406103856/"},{"categories":null,"content":"Nguyên liệu: 30g bơ nhạt 30g đường 1/3 thìa cà phê muối 20g sữa bột (tùy thích) 150g sữa tươi không đường 30g bột mì đa dụng hoặc bột bánh mì 130g bột năng 90g trứng nguyên quả (gần 2 quả) 20g mè đen/vừng đen ","date":"2021-04-12","objectID":"/note/20210406104212/:0:0","tags":["cooking"],"title":"Bánh mì mè đen","uri":"/note/20210406104212/"},{"categories":null,"content":"(7 cái) 240 bột đa dụng 1 thìa cf muối (4g) 4 thìa cf baking powder (17g) 2 muỗng đường (29g) 2 trứng 350ml sữa ấm 60g bơ tan chảy 1 thìa cf vanila nước (4g) Step 1 In a large bowl, mix together flour, salt, baking powder and sugar; set aside. Preheat waffle iron to desired temperature. Step 2 In a separate bowl, beat the eggs. Stir in the milk, butter and vanilla. Pour the milk mixture into the flour mixture; beat until blended. Step 3 Ladle the batter into a preheated waffle iron. Cook the waffles until golden and crisp. Serve immediately. ","date":"2021-04-12","objectID":"/note/20210406102000/:0:0","tags":["cooking"],"title":"Công thức làm bánh Waffle","uri":"/note/20210406102000/"},{"categories":null,"content":"Xúc xích: cứa ngang, dọc, 180*, 9' Lạp xưởng: 180*, 9' Bắp: quét dầu ô liu, 200*, 10-12' Khoai tây: Mực: 200*, 12-15' Ram: lăn qua dầu, 180*, 10' Phồng tôm: Làm nóng 5' ở 200*, nấu 2' ","date":"2021-04-12","objectID":"/note/20210406103613/:0:0","tags":["cooking"],"title":"Công thức thông dụng nồi nướng (air fryer)","uri":"/note/20210406103613/"},{"categories":null,"content":"Commit Message Format Git ignore https://stackoverflow.com/questions/2928584/how-to-grep-search-committed-code-in-the-git-history Delete history Giảm size git repo Remove folder and its contents from git/GitHub’s history Remove file from Git history Git submodules ","date":"2021-04-12","objectID":"/note/git/:0:1","tags":["git"],"title":"Git","uri":"/note/git/"},{"categories":null,"content":"Reference https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit https://reflectoring.io/meaningful-commit-messages/ https://reflectoring.io/git-rebase-merge/ https://taskana.atlassian.net/wiki/spaces/TAS/pages/228884481/GIT+-+basic+Workflow+Usage https://github.com/k88hudson/git-flight-rules https://classroom.udacity.com/courses/ud123 ","date":"2021-04-12","objectID":"/note/git/:1:0","tags":["git"],"title":"Git","uri":"/note/git/"},{"categories":null,"content":"What is GraphQL? GraphQL là một specification của một query language cho APIs. Thường được nhắc đến như là một declarative data-fetching language. Có nghĩa là client hoặc API consumer sẽ gửi một request trong một query language chứa những fields mà nó yêu cầu thay vì toàn bộ payload. Chỉ có một endpoint để mà consumer gửi những queries khác nhau dựa trên data of interest. Graph Theory So sánh GraphQL và REST ","date":"2021-04-12","objectID":"/note/graphql/:1:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Core Concepts GraphQL là language-agnostic (độc lập với bất kì ngôn ngữ lập trình cụ thể nào đó) nên nó tự định nghĩa Query Language và một Schema Definition Language (SDL). Fetching Data with Queries Writing Data with Mutations Realtime Updates with Subscriptions Schema Definition Language (SDL) Defining a Schema ","date":"2021-04-12","objectID":"/note/graphql/:2:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"More GraphQL Concepts Enhancing Reusability with Fragments Parameterizing Fields with Arguments Named Query Results with Aliases ","date":"2021-04-12","objectID":"/note/graphql/:3:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Advanced SDL Object \u0026 Scalar Types Enums Interface Union Types ","date":"2021-04-12","objectID":"/note/graphql/:4:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Schema Documentation Introspection Documentation ","date":"2021-04-12","objectID":"/note/graphql/:5:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Server-Side Implementation GraphQL with Spring Boot ","date":"2021-04-12","objectID":"/note/graphql/:6:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Client-Side Implementations GraphQL Code Libraries, Tools and Services ","date":"2021-04-12","objectID":"/note/graphql/:7:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"GraphQL API Tools GraphiQL là một in-browser integrated development environment (IDE) được tạo bởi Facebook để mà query và explore GraphQL API. Có syntax highlighting, code completion, error warnings, có thể chạy và xem kết quả trực tiếp ở browser. GraphQL Playground: tương tự GraphiQL nhưng có nhiều tính năng hơn. ","date":"2021-04-12","objectID":"/note/graphql/:8:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Demo http://snowtooth.moonhighway.com/ https://github.com/APIs-guru/graphql-apis ","date":"2021-04-12","objectID":"/note/graphql/:9:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":"Reference https://www.howtographql.com/ Introduction to GraphQL | GraphQL Learning GraphQL: Declarative Data Fetching for Modern Web Apps Getting Started with GraphQL - Reflectoring An Advanced GraphQL with Spring Boot and Netflix DGS - Piotr’s TechBlog Open Sourcing the Netflix Domain Graph Service Framework: GraphQL for Spring Boot | by Netflix Technology Blog | Netflix TechBlog Build GraphQL API with Spring Boot - Coding N ConceptsFollow.it ","date":"2021-04-12","objectID":"/note/graphql/:10:0","tags":["graphql","api","programming"],"title":"GraphQL","uri":"/note/graphql/"},{"categories":null,"content":" Walking on the left side of the road is fine, walking on the right side of the road is fine, but walking down the middle of the road will eventually get you squished. Inner and external peace was the ultimate award, but it did not come easy or without a lot of pain, time, and effort. First learn stand, then learn fly. Nature rule, Daniel-san, not mine. Never give up, and often you will learn without knowing it. Don’t cheat, and don’t ever brag about your results before they happen. Your personal brand is worth more than a momentary result. ","date":"2021-04-12","objectID":"/note/20210406105910/:0:0","tags":["life"],"title":"Karate's kid lessons","uri":"/note/20210406105910/"},{"categories":null,"content":" 300g bột mì số 11 3 quả trứng gà (168gr cả vỏ, 155ml không vỏ) 2gr muối 1 cf bột nghệ Cho bột mì vào thau, đập vào 1 quả trứng gà cộng với 1 lòng đỏ rồi bắt đầu nhồi bột. Nếu thấy bột vẫn còn khô thì cho từng muỗng canh lòng trắng trứng vào nhồi đến khi bột mềm, dẻo là được. Nhồi từ 5 - 7 phút. Cho bột vào tô, dùng màng bọc thực phẩm bọc lại rồi ủ bột 30 phút. Cán mỏng bột, gấp đôi lại rồi tiếp tục cán mỏng. Lặp lại từ 7 - 8 lần. Cho bột lại vào tô, ủ bột thêm 30 phút. Cho ít bột áo xuống nơi cán bột, cán mỏng bột rồi gấp gọn lại. Dùng cắt thành từng sợi mì. Nếu mì dính thì cho thêm bột áo. Mì tươi sau khi cắt xong rủ cho rơi bớt bột áo. Bắt nồi nước sôi. Cho mì tươi vào trụng từ 1 - 2 phút. Vớt mì ra cho vào thau nước lạnh chần qua vài lần thì lắc nhẹ để mì ráo nước. ♨ CHÚ Ý KHI LÀM MÌ TƯƠI TẠI NHÀ: Nên dùng bột mì số 11 hoặc bột mì đa dụng để mì tươi dai giòn ngon nhất. Nếu muốn mì tươi dai hơn có thể giảm lượng lòng đỏ thay bằng lòng trắng trứng. Không trụng mì quá lâu làm mì mềm, bỡ. Sau khi trụng nên chần qua nước lạnh giúp mì dai giòn hơn. Bảo quản mì tươi trong ngăn mát tủ lạnh hoặc sấy khô để dùng lâu hơn. ","date":"2021-04-12","objectID":"/note/20210406104145/:0:0","tags":["cooking"],"title":"Làm mì tươi \u0026 hoành thánh","uri":"/note/20210406104145/"},{"categories":null,"content":"chicken 500g eggs 2 oil 15g salt 5g sugar 10g cornflour 60g corn Xay gà, trộn mọi thứ, hấp 15' ","date":"2021-04-12","objectID":"/note/20210406104015/:0:0","tags":["cooking"],"title":"Làm xúc xích gà","uri":"/note/20210406104015/"},{"categories":null,"content":" lesson 1 lesson 2 lesson 3 ＿＿＿は＿＿＿です ＿＿＿も＿＿＿ 20210523204441.md＿＿＿が　できます| lesson 4 ＿＿＿の＿＿＿ ＿＿＿に　すんでいます。 ＿＿＿と＿＿＿ lesson 5 ＿＿＿が　すきです＿＿＿は　すきじゃないです ＿＿＿を　たべます＿＿＿を　のみます よく＿＿＿ますあまり＿＿＿ません lesson 6 すきなきらいな＿＿＿は＿＿＿です ＿＿＿で＿＿＿を　たべます ＿＿＿は　おいしいです lesson 7 ＿＿＿に＿＿＿が　あります ＿＿＿に＿＿＿が　います ＿＿＿が　２つ　あります ＿＿＿は　せまいです。 ＿＿＿と　すんで　います。 lesson 8 ＿＿＿は＿＿＿の＿＿＿です。 lesson 9 なんじですか。９じです。 ＿＿＿７じに　おきます lesson 10 ＿＿＿から＿＿＿までです ＿＿＿じかん＿＿＿ます ＿＿＿が　いいです lesson 11 ＿＿＿で＿＿＿みます ときどき＿＿＿します。 lesson 12 Words ＿＿＿に＿＿＿が あります ＿＿＿で＿＿＿が ありま ＿＿＿を＿＿＿に いきます ＿＿＿ませんか ＿＿＿ましょう lesson 13 Words ＿＿＿から＿＿＿まで＿＿＿で＿＿＿ます ＿＿＿で＿＿＿にを　のお　ります ＿＿＿は＿＿＿が　いいです ＿＿＿から lesson 14 Words ＿＿＿い＿＿＿＿＿＿な＿＿＿ ＿＿＿に＿＿＿が　あります ＿＿＿は＿＿＿の＿＿＿に　ありますいます ＿＿＿の＿＿＿ lesson 15 Words ＿＿＿が　ほしいです ＿＿＿に＿＿＿を　あげます ＿＿＿に＿＿＿を　もらいます ＿＿＿ました lesson 16 Words ＿＿＿は　いくらですか ＿＿＿を　ください Sự khác nhau giữa はきます và きます Thì quá khứ của tính từ lesson 17 Words ＿＿＿かったです＿＿＿でした どこにも＿＿＿ませんなにも＿＿＿ません lesson 18 Words Mẫu câu nói về du lịch ～stndrdth day でも ＿＿＿ます。それから、＿＿＿ます。 ＿＿＿です。でも、＿＿＿です。＿＿＿です。そして、＿＿＿です。 ＿＿＿たいです ","date":"2021-04-12","objectID":"/note/marugoto-a1/:0:0","tags":["japanese","project","marugoto-a1"],"title":"Marugoto A1","uri":"/note/marugoto-a1/"},{"categories":null,"content":"Grammar material Counters n5 nhập môn sơ cấp 1 A1 A2-1 n4 sơ cấp 2 A2-1 A2-2 A2-3 n3 trung cấp 1 A2-4 A2B1 B1-1 n2 trung cấp 2 B1-1 B1-2 n1 cao cấp B1-2 B2C1 C1-1 C1-2 ","date":"2021-04-12","objectID":"/note/marugoto-a1/:0:1","tags":["japanese","project","marugoto-a1"],"title":"Marugoto A1","uri":"/note/marugoto-a1/"},{"categories":null,"content":"Reference https://www.marugoto-online.jp/ ","date":"2021-04-12","objectID":"/note/marugoto-a1/:1:0","tags":["japanese","project","marugoto-a1"],"title":"Marugoto A1","uri":"/note/marugoto-a1/"},{"categories":null,"content":"Súp bí đỏ 100g bí đỏ 800ml nước Chọn chế độ Thick soup (35') ","date":"2021-04-12","objectID":"/note/20210314125032/:1:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Sữa đậu nành 80g hạt đậu nành (có thể mix đậu khác) 800ml nước Chọn chế độ Strong bean (30') ","date":"2021-04-12","objectID":"/note/20210314125032/:2:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Nước gừng chanh sả Chọn chế độ Steamer \u0026 stew (10') không xay ","date":"2021-04-12","objectID":"/note/20210314125032/:3:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Sữa bắp 100g bắp 800ml Chọn chế độ Corn juice (20') ","date":"2021-04-12","objectID":"/note/20210314125032/:4:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Táo đỏ, hầm thuốc 100g táo đỏ 800ml Chọn chế độ Steamer \u0026 stew (10') không xay ","date":"2021-04-12","objectID":"/note/20210314125032/:5:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Soup gà 100g gà (cắt nhỏ 2cm) 3g bột cà ri 600ml nước Chọn chế độ Thick soup (35') ","date":"2021-04-12","objectID":"/note/20210314125032/:6:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Cháo porridge (40') không xay ","date":"2021-04-12","objectID":"/note/20210314125032/:7:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":"Mè sesame paste (20') ✅Đường và sữa tươi chỉ cho vào khi đã rót ra cốc. Nếu cho đường thì phải nhất định phải hòa tan trước khi cho vào cối. 🔆Sữa bí đỏ 700g bí 1L nước Nấu xong thì pha đường 30g/1 bì sữa tươi/sữa đặc 150g 🔆Sữa bắp 1 trái bắp 500ml nước Nấu xong thì pha 1 bì sữa tươi không đường 🔆Sữa đậu đỏ 100g đậu đỏ (Hoặc 40g + 40g mè vàng) nước 1100ml Nấu xong thì pha 1 gói sữa tươi không đường 2 muỗng sữa đặc có đường 30g đường trắng 🔆Sữa mè đen 100g mè đen 500ml nước Nấu xong thì pha 500ml sữa tươi không đường 150g sữa đặc 🔆Sữa đậu xanh 100 gr đậu xanh 1 lít nước Nấu xong thì pha 70g đường 1 bì sữa tươi 50g sữa đặc 🔆Sữa hạt sen thuần túy 150 gr hạt sen 1 lít nước Nấu xong thì pha đường 30g 🔆Sữa đậu nành 300g đậu nành 1L nước lọc Mè trắng hoặc đậu phộng nếu thích. Khi uống thì pha Đường kính: 300 gram 🔆Sữa điều Điều chưa rang muối 100g nước 1000ml Nấu xong thì pha vani 60g đường Muối 🔆Sữa đậu đen đậu đen 30g óc chó 20g 5 hạt 1100 nước Nấu xong thì pha đường Muối 🔆Sữa Đậu phộng Đậu phồng 60g Dừa tươi 20g muối Nấu xong thì pha Nước 1100 Đường 🔆Sữa đậu phộng 200g đậu phộng 100g gạo 500ml nước Nấu xong thì pha 600ml sữa ","date":"2021-04-12","objectID":"/note/20210314125032/:8:0","tags":["cooking","máy-làm-sữa"],"title":"Một số công thức của máy làm sữa","uri":"/note/20210314125032/"},{"categories":null,"content":" P100 - 90 220° - 260° C P80 190° - 220° C P70 175° - 190° C P60 - P50 150° - 175° C P40 - P30 110° - 150° C P20 90° - 110° C P10 65° - 90° C ","date":"2021-04-12","objectID":"/note/20210406103649/:0:0","tags":["cooking"],"title":"Mức nhiệt độ ở lò vi sóng","uri":"/note/20210406103649/"},{"categories":null,"content":"Khoai Hành Tỏi Cà chua Nấm ","date":"2021-04-12","objectID":"/note/20210406103430/:0:0","tags":["cooking"],"title":"Những thứ không nên bỏ vào tủ lạnh","uri":"/note/20210406103430/"},{"categories":null,"content":"Nước: 2.5 lít 500gr đường Sả: 10 cây Nấu 5' 100gr gừng 1 xíu muối Nấu 1' 4 chanh ","date":"2021-04-12","objectID":"/note/20210406103527/:0:0","tags":["cooking"],"title":"Nước chanh sả","uri":"/note/20210406103527/"},{"categories":null,"content":"🔅 Đậu đỏ 200 đậu đỏ 1L nước 1 thìa cf muối 100g đường (70g đường phèn) 1 ống vani 10g bột năng hoặc bột sắn dây Lon nước dừa 🔅Hạt sen Hạt sen 150g (khô thì ngâm 1 - 2 tiếng) đậu xanh 150g (ngâm 1 - 2 tiếng) bột sắn dây 10g đường 100g 1.1l nước hạt sen vào luộc với nước sôi khoảng 5 phút nấu tiếp nước khoảng 15 phút thì cho đậu xanh vào nấu cùng cho đến khi hạt sen chín Hòa bột sắn dây với chút nước, đổ từ từ vào nồi ","date":"2021-04-12","objectID":"/note/20210406103759/:0:0","tags":["cooking"],"title":"Nấu chè","uri":"/note/20210406103759/"},{"categories":null,"content":"What GTD là hệ thống quản lí công việc phổ biến được tạo bởi David Allen. Phương pháp này dựa trên một sự thật đơn giản là: càng nhiều thông tin nhảy quanh trong đầu bạn thì càng khó để quyết định cần chú ý vào cái gì. Kết quả là bạn tiêu tốn nhiều thời gian để nghĩ về công việc đó hơn là hoàn thành chúng. Và khi quá tải thông tin thì dẫn đến căng thẳng, choáng ngợp. ","date":"2021-04-12","objectID":"/note/getting-things-done/:1:0","tags":["productive"],"title":"Phương pháp Getting Things Done (GTD)","uri":"/note/getting-things-done/"},{"categories":null,"content":"How? Bước 1: Nắm bắt tất cả mọi thứ Viết, ghi âm tất cả mọi thứ mà mình chú ý: công việc, ý tưởng. Bước 2: Làm rõ Mô tả kĩ những việc cần làm. Nếu có thể làm trong 2' thì làm luôn. Nếu công việc đó cần nhiều hành động để hoàn thành thì tạo một project và chia nhỏ ra. Nếu công việc đó không thể tự làm thì ủy thác hoặc loại bỏ. Bước 3: Tổ chức Sắp xếp các công việc theo thứ tự ưu tiên, hoàn cảnh. Bước 4: Đánh giá Thường xuyên đánh giá để sắp xếp lại thứ tự ưu tiên. Bước 5: Thực hiện ","date":"2021-04-12","objectID":"/note/getting-things-done/:2:0","tags":["productive"],"title":"Phương pháp Getting Things Done (GTD)","uri":"/note/getting-things-done/"},{"categories":null,"content":"Reference A beginner’s guide to Getting Things Done® | by Siobhan O’Rorke | Zenkit | Medium Building a Second Brain: The Illustrated Notes Getting Things Done®: A Guide for How To Implement It In Paymo https://hamberg.no/gtd/ ","date":"2021-04-12","objectID":"/note/getting-things-done/:3:0","tags":["productive"],"title":"Phương pháp Getting Things Done (GTD)","uri":"/note/getting-things-done/"},{"categories":null,"content":"✅ Nên mua Dilmah Earl grey (black tea + bergamot) Cinnamon Cozy Ginger Lipton Green Tea ❌ Không nên mua Oolong Vũ Gia Vietfarm Life ginger ","date":"2021-04-12","objectID":"/note/tea/:0:0","tags":["health"],"title":"Trà","uri":"/note/tea/"},{"categories":null,"content":"Nguyên liệu 50g bột băng 100g đường nâu 5g bột ca cao 50ml nước sôi 5g bột gạo 75ml nước lọc ","date":"2021-04-12","objectID":"/note/20210406103921/:0:0","tags":["cooking"],"title":"Trân châu đường đen","uri":"/note/20210406103921/"},{"categories":null,"content":"Trứng gà Hành baro Hành tây Tỏi, ớt 200ml nước tương mè rang 100g đường nâu rong biển 200ml nước Ngâm chung 6h ","date":"2021-04-12","objectID":"/note/20210406104046/:0:0","tags":["cooking"],"title":"Trứng gà ngâm tương","uri":"/note/20210406104046/"},{"categories":null,"content":" Đọc. Highlight. Trích xuất highlight rồi viết ghi chú. ","date":"2021-04-12","objectID":"/note/20210318081058/:0:0","tags":["productive"],"title":"Zettelkasten method","uri":"/note/20210318081058/"},{"categories":null,"content":"Reference https://leananki.com/zettelkasten-method-smart-notes/ https://blog.viktomas.com/posts/slip-box/ https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125 https://kadavy.net/blog/posts/zettelkasten-method-slip-box-digital-example/ ","date":"2021-04-12","objectID":"/note/20210318081058/:1:0","tags":["productive"],"title":"Zettelkasten method","uri":"/note/20210318081058/"},{"categories":null,"content":"Java Core Hello World Understanding the Java Class Structure Package Data Type Declaring Variables Local Variable Type Inference Identifiers Operator Precedence Casting Values Compound assignment operators Static Inheritance Polymorphism Member inner class Abstract class Lambdas Streams API Collector Optional Interface Date and Time API HttpClient Exception Methods in Interfaces Modularity Primitive Types, Operators, and Flow Control Statements Text, Date, Time, and Numeric Objects Classes and Objects Inheritance Interfaces Arrays and Loop Collections Nested Classes and Lambda Expressions Streams Handle Exceptions and Fix Bugs IO Concurrency and Multiple-thread Annotations Java Database Connectivity Java Security Advanced Generics Fork Join Localization Object-Oriented Platform Module System Multiple threads Interface vs Abstract ","date":"2021-04-12","objectID":"/note/java/:1:0","tags":["java"],"title":"☕ Java language","uri":"/note/java/"},{"categories":null,"content":"Framework Tìm hiểu về Java EE 7 – Phần 1 (JSF) Spring ","date":"2021-04-12","objectID":"/note/java/:2:0","tags":["java"],"title":"☕ Java language","uri":"/note/java/"},{"categories":null,"content":"Reference Oracle Certified Professional Java SE 11 Developer Complete Study Guide Core Java Volume I — Fundamentals Core Java Volume II — Advanced Iron-Clad Java: Building Secure Web Applications Thinking in Java Effective Java Java® EE Notes for Professionals book Java 8 in Action: Lambdas, Streams, and Functional-Style Programming ","date":"2021-04-12","objectID":"/note/java/:3:0","tags":["java"],"title":"☕ Java language","uri":"/note/java/"},{"categories":null,"content":"Giáo trình Marugoto A1 Marugoto A2-1 NEJ シャドーイング　日本語を話そう - Shadowing Nihongo wo Hanasou シャドーイング　日本語を話そう　就職・アルバイト・進学面接編 - Shadowing phiên bản phỏng vấn xin việc, tuyển sinh しごとの日本語 IT業務編 - Giáo trình tiếng Nhật chuyên ngành Công nghệ thông tin Nameraka Nihongo Kaiwa - Successful Communication in Japanese 聞いて覚える話し方 日本語生中継 - Kiite Oboeru Hanashikata Nihongo Namachuukei ","date":"2021-04-12","objectID":"/note/japanese/:0:1","tags":["japanese"],"title":"🇯🇵 Japanese","uri":"/note/japanese/"},{"categories":null,"content":"https://maggieappleton.com/garden-history ","date":"2021-04-12","objectID":"/note/20210315150839/:0:0","tags":["productive"],"title":"🌱 Digital Garden","uri":"/note/20210315150839/"},{"categories":null,"content":"Reference https://joelhooks.com/digital-garden https://scottspence.com/garden https://anthonymorris.dev https://www.mentalnodes.com/about https://notes.andymatuschak.org/ https://til.yenly.wtf/ https://wiki.nikitavoloboev.xyz/ https://github.com/MaggieAppleton/digital-gardeners https://blog.charlietrochlil.com/ ","date":"2021-04-12","objectID":"/note/20210315150839/:1:0","tags":["productive"],"title":"🌱 Digital Garden","uri":"/note/20210315150839/"},{"categories":null,"content":" Sách mình đã đọc Cách đọc sách Nhận xét ngắn về sách ","date":"2021-04-12","objectID":"/note/book/:0:0","tags":["book"],"title":"📚 Books","uri":"/note/book/"},{"categories":null,"content":" 🥇 Models: Attract Women Through Honesty 2021 Learning GraphQL: Declarative Data Fetching for Modern Web Apps 2020 🥇 Khuyến học 2020 🥇 Thuật yêu đương 2020 Bitcoin 2020 Đàn ông sao hỏa, đàn bà sao kim 2020 Get Your Hands Dirty on Clean Architecture - Tom Hombergs 2020 Hoàng tử bé 2020 Kỹ năng lắng nghe trong giao tiếp 2020 Người giàu có nhất thành Babylon 2020 Người Mohican cuối cùng 2020 Nguồn cội 2020 Nhà giả kim 2020 No more Mr nice guy 2020 Phi lý một cách hợp lý 2020 Quyến rũ phụ nữ bằng sự trung thực 2020 Rèn luyện trí nhớ - 101 mẹo gợi nhớ tức thì 2020 TnBS - Trên đường băng 2020 How to Be a 3% Man, Winning the Heart of the Woman of Your Dreams 2021 Head first Go 2021 Mastering Spring 5.0 2021 🥇 Oracle Certified Professional Java SE 11 Developer Complete Study Guide 2021 🥇 Tôi tự học 2021 Bạn không thông minh lắm đâu 2021 Bố già 2021 Chỉ nam thiền tập cho người trẻ 2021 Chuyện ở nông trại 2021 Core Java Volume I — Fundamentals 2021 Core Java Volume II — Advanced 2021 Kinh tế học hài hước 2021 Kỹ nghệ lấy Tây 2021 Những người thích đùa 2021 Tập truyện ngắn Một đồng bạc 2021 Java 8 in Action: Lambdas, Streams, and Functional-Style Programming 2021 Docker Deep Dive: Harness the Full Potential of Your Applications With Docker 2021 Jenkins Fundamentals 2021 Tiền của bạn ","date":"2021-04-12","objectID":"/note/list-of-books/:0:0","tags":["book"],"title":"📚 List of books","uri":"/note/list-of-books/"},{"categories":null,"content":"Reference Book recommendations for programmers from Josh Long | ITkonekt The Best Book Recommendations — Alex \u0026 Books 100 Good Books to Read: Book Recommendations by Topic ","date":"2021-04-12","objectID":"/note/list-of-books/:1:0","tags":["book"],"title":"📚 List of books","uri":"/note/list-of-books/"},{"categories":null,"content":"This post is inspired in this post ","date":"2020-12-03","objectID":"/note/20210412154653/:0:0","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Introduce Here is a default Logback’s console pattern of Spring Boot. ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}} And its output: 2020-12-08 22:12:49.269 INFO 17092 --- [ Test worker] c.h.logging.controller.DemoController : This is a INFO log 2020-12-08 22:12:49.270 WARN 17092 --- [ Test worker] c.h.logging.controller.DemoController : This is a WARN log 2020-12-08 22:12:49.270 ERROR 17092 --- [ Test worker] c.h.logging.controller.DemoController : This is a ERROR log It’s so cool but we add some modifications by extending ch.qos.logback.classic.PatternLayout to make it greater. public class GreatPatternLayout extends PatternLayout { static { } } Finally layout, pattern and output: %d{yyyy-MM-dd HH:mm:ss.SSS, UTC} %level ${PID:- } [%user %session] [%t] %-40.40logger{39}@%method:%line - %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx} 2020-12-11 15:02:04.398 D 17597 [admin BE8F11][nio-8080-exec-1] c.h.logging.controller.DemoController @currentUserName:27 - This is a DEBUG log 2020-12-11 15:02:04.417 I 17597 [admin BE8F11][nio-8080-exec-1] c.h.logging.controller.DemoController @currentUserName:28 - This is a INFO log 2020-12-11 15:02:04.418 W 17597 [admin BE8F11][nio-8080-exec-1] c.h.logging.controller.DemoController @currentUserName:29 - This is a WARN log 2020-12-11 15:02:04.419 E 17597 [admin BE8F11][nio-8080-exec-1] c.h.logging.controller.DemoController @currentUserName:30 - This is a ERROR log 2020-12-11 15:02:04.430 E 17597 [admin BE8F11][nio-8080-exec-1] c.hukacode.logging.aop.ExecutionLogging @logException:42 - -\u003eclass com.hukacode.logging.controller.DemoController.currentUserName(input=abc, request=SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4739d1f8]) ","date":"2020-12-03","objectID":"/note/20210412154653/:0:1","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Who was doing this? We can answer this question by getting Username/ID from SecurityContext. We do it by extend ch.qos.logback.classic.pattern.ClassicConverter. public class UserConverter extends ClassicConverter { @Override public String convert(ILoggingEvent iLoggingEvent) { var authentication = SecurityContextHolder.getContext().getAuthentication(); if (authentication == null) { return \"\"; } else { return authentication.getName(); } } } We also can add Session into log public class SessionConverter extends ClassicConverter { @Override public String convert(ILoggingEvent event) { var attrs = RequestContextHolder.getRequestAttributes(); if (attrs != null) { return attrs.getSessionId().substring(0, Math.min(6, attrs.getSessionId().length())); } return \"\"; } } Then put new Converters into GreatPatternLayout class public class GreatPatternLayout extends PatternLayout { static { PatternLayout.defaultConverterMap.put(\"user\", UserConverter.class.getName()); PatternLayout.defaultConverterMap.put(\"session\", SessionConverter.class.getName()); } } ","date":"2020-12-03","objectID":"/note/20210412154653/:0:2","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Where did it happen? Print method and line number @%method:%line ","date":"2020-12-03","objectID":"/note/20210412154653/:0:3","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"When did it occur? Use UTC d{yyyy-MM-dd HH:mm:ss.SSS, UTC} Or add Timezone d{yyyy-MM-dd HH:mm:ss.SSSZZZ} ","date":"2020-12-03","objectID":"/note/20210412154653/:0:4","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"What is going on? We can use 1 letter instead of using (ERROR, WARN, INFO, DEBUG, TRACE) public class ShortLevelConverter extends ClassicConverter { @Override public String convert(ILoggingEvent iLoggingEvent) { return iLoggingEvent.getLevel().toString().substring(0, 1); } } public class GreatPatternLayout extends PatternLayout { static { PatternLayout.defaultConverterMap.put(\"user\", UserConverter.class.getName()); PatternLayout.defaultConverterMap.put(\"session\", SessionConverter.class.getName()); PatternLayout.defaultConverterMap.put(\"level\", ShortLevelConverter.class.getName()); } } Create log files for each level INFO and WARN/ERROR \u003cappender name=\"LOG_INFO\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"\u003e \u003cfile\u003e${LOG_FILE_INFO}\u003c/file\u003e \u003crollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"\u003e \u003cfileNamePattern\u003e${LOG_FILE_INFO}.%d{yyyy-MM-dd}.log.zip\u003c/fileNamePattern\u003e \u003c!-- Days to keep --\u003e \u003cmaxHistory\u003e7\u003c/maxHistory\u003e \u003c!-- total size of all archive files, if total size \u003e N, it will delete old archived file --\u003e \u003ctotalSizeCap\u003e2GB\u003c/totalSizeCap\u003e \u003c/rollingPolicy\u003e \u003cfilter class=\"ch.qos.logback.classic.filter.LevelFilter\"\u003e \u003clevel\u003eINFO\u003c/level\u003e \u003conMatch\u003eACCEPT\u003c/onMatch\u003e \u003conMismatch\u003eDENY\u003c/onMismatch\u003e \u003c/filter\u003e \u003cencoder name=\"enc\" class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\"\u003e \u003clayout class=\"com.hukacode.logging.logback.GreatPatternLayout\"\u003e \u003cpattern\u003e ${FILE_LOG_PATTERN} \u003c/pattern\u003e \u003c/layout\u003e \u003ccharset\u003eutf8\u003c/charset\u003e \u003c/encoder\u003e \u003c/appender\u003e \u003cappender name=\"LOG_ERROR\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"\u003e \u003cfile\u003e${LOG_FILE_ERROR}\u003c/file\u003e \u003crollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"\u003e \u003cfileNamePattern\u003e${LOG_FILE_ERROR}.%d{yyyy-MM-dd}.log.zip\u003c/fileNamePattern\u003e \u003c!-- Days to keep --\u003e \u003cmaxHistory\u003e7\u003c/maxHistory\u003e \u003c!-- total size of all archive files, if total size \u003e N, it will delete old archived file --\u003e \u003ctotalSizeCap\u003e2GB\u003c/totalSizeCap\u003e \u003c/rollingPolicy\u003e \u003cfilter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"\u003e \u003clevel\u003eERROR\u003c/level\u003e \u003c/filter\u003e \u003cencoder name=\"enc\" class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\"\u003e \u003clayout class=\"com.hukacode.logging.logback.GreatPatternLayout\"\u003e \u003cpattern\u003e ${FILE_LOG_PATTERN} \u003c/pattern\u003e \u003c/layout\u003e \u003ccharset\u003eutf8\u003c/charset\u003e \u003c/encoder\u003e \u003c/appender\u003e ","date":"2020-12-03","objectID":"/note/20210412154653/:0:5","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Why did it happen? // TODO ","date":"2020-12-03","objectID":"/note/20210412154653/:0:6","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"How did it happen? When an exception occurs, we want to print all of the input parameters. We can achieve it by using Spring AOP @Aspect public class ExecutionLogging { @Pointcut(\"execution(* com.hukacode.logging.controller.*.*(..))\") public void controllerMethods() {} @AfterThrowing(value = \"controllerMethods()\", throwing = \"exception\") public void logException(JoinPoint joinPoint, Exception exception) throws Throwable { // ommitted } } ","date":"2020-12-03","objectID":"/note/20210412154653/:0:7","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Source code Demo here gradle bootRun curl http://localhost:8080/api/me?input=abc ","date":"2020-12-03","objectID":"/note/20210412154653/:0:8","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Reference https://github.com/onready/demo-spring-security-logging-pattern ","date":"2020-12-03","objectID":"/note/20210412154653/:1:0","tags":["spring-boot","logging"],"title":"Few tips to improve logging","uri":"/note/20210412154653/"},{"categories":null,"content":"Snes Biker Mice From Mars Kunio-kun no Dodge Ball - Zenin Shuugou ","date":"2020-11-24","objectID":"/note/game/:0:1","tags":["game","relax"],"title":"🎮 List of games","uri":"/note/game/"},{"categories":null,"content":"PSX Animorphs - Shattered Reality [U] [SLUS-01010] Army Men 3D [U] [SLUS-00491] Assault Retribution [U] [SLUS-00713] Bloody_Roar_2_-_Bringer_of_the_New_Age_(PAL)_[SLES-01722] Bomberman Fantasy Race (J) [SLPS-01525] Crisis Beat (E) [SLES-02793] Future Cop L.A.P.D. G-Darius [SLUS-00690] Gear Fighter Dendoh [J] [NTSC] [SLPS-03189] Gekido - Urban Fighters [NTSC-U] [SLUS-00970] Hermie Hopperhead - Scrap Panic (Japan) [SCPS-91016] In The Hunt [U] [SLUS-00172] Kattekita Cyborg Kurochan - Jap Rogue Trip - Vacation 2012 (E) (Track 01) [SLES-01417] Tekken_3_(PAL)_[SCES-01237] Tenchu - Stealth Assassins (E) [SLES-01374] Tenchu - Stealth Assassins [U] [SLUS-00706] Tenchu 2 Tenchu 3 Wrath of Heaven Tenchu 4 Fatal Shadows Tenchu-Shinobi Hyakusen-PSX-NTSC-JAP Chocobo Racing (NTSC-USA) Crash bandicoot Collection Dragonball GT - Final Bout [SLUS-00493] [bin] God of War I God of War II Rockman 8 Time Bokan Yattaman Series - Bokandesuyo Vigilante 8 Vigilante 8 - 2nd Offense Zanac X Zanac (J) [SLPS-03354] ","date":"2020-11-24","objectID":"/note/game/:0:2","tags":["game","relax"],"title":"🎮 List of games","uri":"/note/game/"},{"categories":null,"content":" 12 Angry Men 127 Hours 50/50 American Sniper (2014) Apocalypse Now (1979) | R | 2h 27min | Drama, Mystery, War | 15 August 1979 (USA) Battle for Sevastopol / Red Sniper (2015) Boiler Room (2000) BoJack Horseman (2014) Cast Away Chihiro no kamikakushi (2001) Coco (2017) Darkling 2010 Dhad Enemy Eternal Sunshine of the Spotless Mind (2004) Friends Gentlemen Good Will Hunting (1997) Goodfellas (1990) Groundhog Day (1993) I Care A Lot Incendies (2010) Inglourious Basterds (2009) R | Adventure, Drama, War Jagten (2012) Jobs (2013) Joy (2015) Kah ho na ho Brip koizora Léon: The Professional (1994) Life is beautiful Lucifer Mindscape Modern Family Mononoke-hime | PG-13 | 2h 14min | Animation, Action, Adventure | 12 July 1997 (Japan) Monty Python’s Life Of Brian (1979) Mystic River Nightcrawler Nocturnal Animals North by Northwest (1959) Once Upon a time in Hollywood (2019) Peaky Blinders Primal Fear PS I love you (2007) Pursuit of Happiness (2006) Requiem for a Dream (2000) Still Alice Taare Zameen Par Taxi Driver The bucket list (2007) The Equalizer The Founder (2017) The Fugitive (1993) The God Father The great escape The Intouchables (2011) The Life Of David Gale The Usual Suspects (1995) | R 1h 46min Crime, Mystery 1995 (Romania) Movie Unthinkable Wall Street 2: Money Never Sleeps Whiplash (2014) | R 1h 46min Drama, Music 15 Oct 2014 (Philippines) Movie Wild Tales 🥇 Forrest Gump (1994) 🥇 The Shawshank Redemption (1994) 🥇 3 Idiots (2009) 🥇 Narcos series 🥈 Law Abiding Citizen (2009) 🥈 The Departed 🥈 Châu Tinh Trì 🥈 How I Met Your Mother series 🥈 Prison Break series 🥈 Soul (2020) 🥈 The body (2012) 🥈 The Wolf of the Wallstreet (2013) 50 First Dates (2004) The Imitation Game Chronicle Act of valor (2012) And then there were none Brinvanda (2010) Brooklyn 99 series Byousoku 5 Centimeter Dexter series Donnie Darko El Chapo series Enemy at the Gates (2001) Face off Fargo series Fight Club Final Destination series Focus (2015) Gisaengchung (2019) | C18 | 2h 12min | Comedy, Drama, Thriller | 21 June 2019 (Vietnam) Gone girl I Hate Luv Storys 2010 Identity (2003) Interstellar (2014) Ironman 1 2 3 John Wick Kimi no na wa. (2016) | C16 | 1h 46min | Animation, Drama, Fantasy | 13 January 2017 (Vietnam) KOPPS (2003) Letters to Juliet (2010) Liar Game Liar Game Alice Limitless Megamind The Button of Doom 2010 Memento (2000) Mr Nobody Naked Gun Người trong giang hồ Oldboy (2003) C18 | 2h | Action, Drama, Mystery | 21 November 2003 (South Korea) Predestination Prison Break Prisoners Red Shoes and the Seven Dwarfs (2019) Rush Hour SAW series Scary Movie Se7en Seven Psychopaths (2012) Sherlock Holmes Shooter (2007) Shooter (2007) Shutter Island Singham (2011) Slumdog Millionaire (2008) Spiral Superhero Movie Taken 1 2 The accountant The Art of the Steal (2013) The Big Bang theory series The Bourne Identity (2002) The Bourne Supremacy (2004) The Bourne Ultimatum (2007) The Butterfly Effect 1 DC (2004) The Butterfly Effect 2 (2006) The Butterfly Effect 3 Revelations (2009) The DaVinci Code (2006) The Departed (2006) | R | 2h 31min | Crime, Drama, Thriller | 3 August 2007 (Vietnam) The Double (2011) The Game (1997) The Hidden Face The Invisible Guest (2016) The Machinist (2004) The Matrix The Mummy Trilogy The Prestige (2006) The Vow Timecrimes Tower Heist (2011) Triangle (2009) Tucker And Dale vs Evil Up Wall-E Wanted (2008) When in Rome (2010) Who am I? (2014) Wreck It Ralph (2012) The Boys season 1 2 Nobody The Equalizer 2 (2018) ","date":"2020-11-17","objectID":"/note/movie/:0:0","tags":["relax","movie"],"title":"🎬 List of movies","uri":"/note/movie/"},{"categories":["beginner"],"content":"Lan man Tình hình là cuối năm, inbox tràn ngập mail từ vietnamwork. Mình thì tính hay tò mò nên cũng thử check vài cái Senior Java coi nhà tuyển dụng yêu cầu gì. Và hầu như tin tuyển dụng nào cũng có yêu cầu là Java EE. Thôi thì cũng ráng dành chút thời gian để tìm hiểu mà bổ sung kĩ năng. Vừa giúp cho bản thân cũng như cho người nào muốn tìm hiểu như mình. Mọi ý kiến đóng góp xin bình luận bên dưới nhé! ","date":"2017-03-12","objectID":"/note/20210412154756/:0:1","tags":["JavaEE","JSF"],"title":"Tìm hiểu về Java EE 7 – Phần 1 (JSF)","uri":"/note/20210412154756/"},{"categories":["beginner"],"content":"Vậy Java EE là gì nhỉ? Java EE hay còn được viết là J2EE là viết tắt của từ Java Enterprise Edition. Nó là một bộ chuẩn các công nghệ dành cho việc phát triển Java phía server (server-side). Những công nghệ đó bao gồm JavaServer Faces (JSF), Enterprise JavaBeans (EJBs), Java Messaging Service (JMS), Java Persistence API (JPA), Java API for WebSocket, Contexts and Dependency Injection (CDI), Java API for XML Web Services (JAX-WS), Java API for RESTful Web Services (JAX-RS) và Java API for JSON Processing (JSON-P),… Ở phần một này chúng ta cùng tìm hiểu JavaServer Faces (JSF) là gì nào? JSF là một Java framework được chuẩn hóa dành cho web UIs dựa trên MVC pattern. JSP là một tiêu chuẩn dành cho việc tạo ra trang web từ mẫu (template). Facelets là sự thay thế của JSP trong tầng View dựa trên mẫu XML thuần (không có scriptlet). Chúng chỉ có thể được dùng trong ứng dụng JSF. Để thuận tiện cho việc theo dõi và thực hành các bạn dùng công nghệ/công cụ như mình sử dụng nhé: Eclipse Maven GlassFish JSF 2.2 ","date":"2017-03-12","objectID":"/note/20210412154756/:0:2","tags":["JavaEE","JSF"],"title":"Tìm hiểu về Java EE 7 – Phần 1 (JSF)","uri":"/note/20210412154756/"},{"categories":["beginner"],"content":"Facelets là gì? Facelets là một phần đặc tả kĩ thuật (specification) của JSF và cũng là presentation technology ưa thích để xây dựng ứng dụng JSF. Tính năng của Facelets bao gồm: Dùng XHTML để tạo web page. Hỗ trợ thự viện Facelets tag ngoài JSF, JSTL tag. Hỗ trợ EL. Tạo khuôn mẫu (template) cho các components và pages. Lợi thế của Facelets cho project phát triển quy mô lớn gồm: Hỗ trợ cho tái sử dụng code thông qua các template và composite components Thời gian biên dịch nhanh Compile-time EL validation Render hiệu năng cao. Nói ngắn gọn, dùng Facelets sẽ giảm thời gian và công sức cần thiết để mà develop và deploy. Các phiên bản trước JSF dùng JSP để làm tầng view mặc định và ở JSF 2 thì đã thay thế bằng Facelets. So sánh JSP và Facelets JSP Compile-Time Overhead Mỗi lần bạn chỉnh sửa, lưu lại và load lại trang JSP, bộ biên dịch JSP của server sinh ra file Java servlet và biên dịch nó thành một servlet. Quá trình này được gọi là biên dịch JSP và thông thường nó tốn khoảng 1-2 giấy tùy thuộc vào hiệu năng của server. Facelets XML Compilation Không giống như JSP, Facelets không biên dịch thành servlet. Vì Facelets tuân thủ cú pháp XML (XML-compliant), Facelets framework dùng một SAX-based compiler để xây dựng view. Mặc khác, Facelets có thể được cấu hình để phát hiện và render thay đổi nội dung ngay lập tức. Các bạn hãy xem ví dụ đơn giản sau về cú pháp của Facelets: \u003c?xml version='1.0' encoding='UTF-8' ?\u003e \u003c!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"\u003e \u003chtml xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:h=\"http://java.sun.com/jsf/html\" xmlns:f=\"http://java.sun.com/jsf/core\"\u003e \u003ch:head\u003e \u003ctitle\u003eThe notebook\u003c/title\u003e \u003c/h:head\u003e \u003ch:body\u003e \u003ch:outputStylesheet library=\"css\" name=\"styles.css\" /\u003e \u003ch:form id=\"userForm\"\u003e \u003ch:messages\u003e\u003c/h:messages\u003e \u003ch:panelGrid columns=\"2\" columnClasses=\"rightAlign,leftAlign\"\u003e \u003ch:outputLabel for=\"firstName\" value=\"First Name:\"\u003e \u003c/h:outputLabel\u003e \u003ch:inputText id=\"firstName\" label=\"First Name\" value=\"#{user.firstName}\" required=\"true\"\u003e \u003cf:validateLength minimum=\"2\" maximum=\"30\"\u003e \u003c/f:validateLength\u003e \u003c/h:inputText\u003e \u003ch:outputLabel for=\"lastName\" value=\"Last Name:\"\u003e \u003c/h:outputLabel\u003e \u003ch:inputText id=\"lastName\" label=\"Last Name\" value=\"#{user.lastName}\" required=\"true\"\u003e \u003cf:validateLength minimum=\"2\" maximum=\"30\"\u003e \u003c/f:validateLength\u003e \u003c/h:inputText\u003e \u003ch:outputLabel for=\"email\" value=\"Email:\"\u003e \u003c/h:outputLabel\u003e \u003ch:inputText id=\"email\" label=\"Email\" value=\"#{user.email}\"\u003e \u003cf:validateLength minimum=\"3\" maximum=\"30\"\u003e \u003c/f:validateLength\u003e \u003c/h:inputText\u003e \u003ch:panelGroup\u003e\u003c/h:panelGroup\u003e \u003ch:commandButton action=\"confirmation\" value=\"Save\"\u003e \u003c/h:commandButton\u003e \u003c/h:panelGrid\u003e \u003c/h:form\u003e \u003c/h:body\u003e \u003c/html\u003e Bài này mình xin dừng lại tại đây, hẹn gặp các bạn ở bài sau về Java Persistence API (JPA) ","date":"2017-03-12","objectID":"/note/20210412154756/:0:3","tags":["JavaEE","JSF"],"title":"Tìm hiểu về Java EE 7 – Phần 1 (JSF)","uri":"/note/20210412154756/"}]